[{"/home/dell/Desktop/Learning/JWT/client/src/index.tsx":"1","/home/dell/Desktop/Learning/JWT/client/src/generated/graphql.tsx":"2","/home/dell/Desktop/Learning/JWT/client/src/Routes.tsx":"3","/home/dell/Desktop/Learning/JWT/client/src/pages/Home.tsx":"4","/home/dell/Desktop/Learning/JWT/client/src/pages/Bye.tsx":"5","/home/dell/Desktop/Learning/JWT/client/src/pages/Header.tsx":"6","/home/dell/Desktop/Learning/JWT/client/src/App.tsx":"7","/home/dell/Desktop/Learning/JWT/client/src/pages/Header/Header.tsx":"8","/home/dell/Desktop/Learning/JWT/client/src/pages/Register/Register.tsx":"9","/home/dell/Desktop/Learning/JWT/client/src/pages/Login/Login.tsx":"10","/home/dell/Desktop/Learning/JWT/client/src/accessToken.ts":"11","/home/dell/Desktop/Learning/JWT/client/src/pages/Cart/Cart.tsx":"12","/home/dell/Desktop/Learning/JWT/client/src/redux/reducers/cartReducer.ts":"13","/home/dell/Desktop/Learning/JWT/client/src/redux/types/cart.ts":"14","/home/dell/Desktop/Learning/JWT/client/src/redux/reducers/index.ts":"15","/home/dell/Desktop/Learning/JWT/client/src/redux/store/index.tsx":"16","/home/dell/Desktop/Learning/JWT/client/src/redux/actions/carts.ts":"17"},{"size":2418,"mtime":1612860290874,"results":"18","hashOfConfig":"19"},{"size":15726,"mtime":1612855942125,"results":"20","hashOfConfig":"19"},{"size":862,"mtime":1612116025007,"results":"21","hashOfConfig":"19"},{"size":658,"mtime":1612855008607,"results":"22","hashOfConfig":"19"},{"size":519,"mtime":1611479125809,"results":"23","hashOfConfig":"19"},{"size":1387,"mtime":1611851727305,"results":"24","hashOfConfig":"19"},{"size":748,"mtime":1612860137650,"results":"25","hashOfConfig":"19"},{"size":9894,"mtime":1612119597354,"results":"26","hashOfConfig":"19"},{"size":3774,"mtime":1612005920343,"results":"27","hashOfConfig":"19"},{"size":3476,"mtime":1612005831517,"results":"28","hashOfConfig":"19"},{"size":292,"mtime":1612090362982,"results":"29","hashOfConfig":"19"},{"size":981,"mtime":1612121091935,"results":"30","hashOfConfig":"19"},{"size":630,"mtime":1612121416769,"results":"31","hashOfConfig":"19"},{"size":488,"mtime":1612096562625,"results":"32","hashOfConfig":"19"},{"size":211,"mtime":1612121200239,"results":"33","hashOfConfig":"19"},{"size":227,"mtime":1612119901451,"results":"34","hashOfConfig":"19"},{"size":499,"mtime":1612120493986,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tem2du",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dell/Desktop/Learning/JWT/client/src/index.tsx",[],"/home/dell/Desktop/Learning/JWT/client/src/generated/graphql.tsx",[],"/home/dell/Desktop/Learning/JWT/client/src/Routes.tsx",[],"/home/dell/Desktop/Learning/JWT/client/src/pages/Home.tsx",["79"],"/home/dell/Desktop/Learning/JWT/client/src/pages/Bye.tsx",["80"],"import React from 'react'\nimport { useByeQuery } from 'src/generated/graphql';\n\ninterface ByeProps {\n\n}\n\nexport const Bye: React.FC<ByeProps> = ({ }) => {\n    const { data, loading, error } = useByeQuery({ fetchPolicy: 'network-only' });\n    if (loading) {\n        return <div>loading...</div>\n    }\n    if (error) {\n        console.log('error', error)\n        return <div>err</div>\n    }\n    if (!data) {\n        return <div>no data</div>\n    }\n    return (\n        <div>\n            {data.bye}\n        </div>\n    );\n}",["81","82"],"/home/dell/Desktop/Learning/JWT/client/src/pages/Header.tsx",["83"],"/home/dell/Desktop/Learning/JWT/client/src/App.tsx",[],"/home/dell/Desktop/Learning/JWT/client/src/pages/Header/Header.tsx",["84","85","86"],"import React, { useState } from 'react';\nimport { Avatar, Dropdown, Drawer, message, Menu, Row, Col, Input, Button } from 'antd';\nimport './index.scss';\nimport \"antd/dist/antd.css\";\nimport { UserOutlined, NotificationOutlined, StarOutlined, SearchOutlined, MenuOutlined } from '@ant-design/icons';\nimport { setAccessToken } from 'src/accessToken';\nimport { useLogoutUserMutation, useUserDetailsQuery } from 'src/generated/graphql';\nimport { Link, useHistory } from 'react-router-dom';\n\ninterface HeaderProps {\n}\n\nexport const Header: React.FC<HeaderProps> = () => {\n    const { data, loading } = useUserDetailsQuery()\n    const [logoutUser, { client }] = useLogoutUserMutation()\n    const [isVisible, setVisible] = useState<boolean | undefined>(false);\n    const history = useHistory();\n    const showDrawer = (event: React.MouseEvent<HTMLSpanElement, MouseEvent>): void => {\n        setVisible(true);\n    };\n\n    const onClose = (e?: React.KeyboardEvent<HTMLDivElement> | React.MouseEvent<HTMLDivElement | HTMLButtonElement>): void => {\n        setVisible(false);\n    };\n\n    const logOutUser = (e: any) => {\n        return logoutUser().then(res => {\n            setAccessToken('');\n            client.resetStore();\n            history.push('./');\n        })\n    }\n\n    const rootSubmenuKeys: string[] = ['1', '2', '3'];\n    const [drawerOpenKeys, setdrawerOpenKeys] = useState<string[]>([]);\n\n    const handleOpenChange = (keys: any): void => {\n        const latestOpenKey: string = keys.find((key: string) => drawerOpenKeys.indexOf(key) === -1);\n        if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n            setdrawerOpenKeys(keys);\n        } else {\n            setdrawerOpenKeys(latestOpenKey ? [latestOpenKey] : []);\n        }\n    };\n\n\n    interface MenuClickEventHandlerProps {\n        key: React.Key;\n        keyPath: React.Key[];\n        item: React.ReactInstance;\n        domEvent: React.MouseEvent<HTMLElement>;\n    }\n\n    const onDrawerOptionClick = (key: MenuClickEventHandlerProps): void => {\n        onClick(key)\n        onClose()\n    }\n\n    const onClick = (key: MenuClickEventHandlerProps): void => {\n        message.info(`Click on item ${key.key}`);\n    };\n\n    const onClickCart = (event: React.MouseEvent<HTMLSpanElement, MouseEvent>): void => {\n        history.push('/cart')\n    }\n\n    const onSearch = (value: string, event?: React.ChangeEvent<HTMLInputElement> | React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLInputElement>): void => {\n        console.log(value)\n    }\n    const onClickNotification = (event: React.MouseEvent<HTMLSpanElement, MouseEvent>): void => {\n        console.log('onClickNotification')\n    }\n\n    const drawerTitile = <>\n        <div className=\"header-drawer-title\">\n            Profile\n        </div>\n    </>;\n\n    const menuOption = <>\n        <Menu.SubMenu key=\"1\" title=\"Topwear \">\n            <Menu.Item key=\"T-Shirts\">T-Shirts</Menu.Item>\n            <Menu.Item key=\"Casual Shirts\">Casual Shirts</Menu.Item>\n            <Menu.Item key=\"Formal Shirts\">Formal Shirts</Menu.Item>\n            <Menu.Item key=\"Sweatshirts\">Sweatshirts</Menu.Item>\n            <Menu.Item key=\"Sweaters\">Sweaters</Menu.Item>\n            <Menu.Item key=\"Jackets\">Jackets</Menu.Item>\n        </Menu.SubMenu>\n        <Menu.SubMenu key=\"2\" title=\"Bottomwear \">\n            <Menu.Item key=\"Jeans\" >Jeans</Menu.Item>\n            <Menu.Item key=\"Casual Trousers\" >Casual Trousers</Menu.Item>\n            <Menu.Item key=\"Formal Trousers\" >Formal Trousers</Menu.Item>\n            <Menu.Item key=\"Track Pants & Joggers\" >Track Pants & Joggers</Menu.Item>\n        </Menu.SubMenu>\n        <Menu.SubMenu key=\"3\" title=\"Footwear \">\n            <Menu.Item key=\"Sports Shoes\">Sports Shoes</Menu.Item>\n            <Menu.Item key=\"Casual Shoes\">Casual Shoes</Menu.Item>\n            <Menu.Item key=\"Formal Shoes\">Formal Shoes</Menu.Item>\n            <Menu.Item key=\"Sneakers\">Sneakers</Menu.Item>\n            <Menu.Item key=\"Sandals & Floaters\">Sandals & Floaters</Menu.Item>\n        </Menu.SubMenu>\n    </>\n\n    let userMenuOption: any = null;\n\n    if (loading || !data || !data.getUserDetails) {\n        userMenuOption = <>\n            <Menu.Item key=\"login\" ><Link to=\"/login\">Log in</Link></Menu.Item>\n            <Menu.Item key=\"signin\"><Link to=\"/register\">register</Link></Menu.Item>\n        </>;\n    } else {\n        userMenuOption = <>\n            <Menu.Item key=\"login\" >{data.getUserDetails.email}</Menu.Item>\n            <Menu.Item key=\"Casuals\">Profile</Menu.Item>\n            <Menu.Item key=\"logout\"><Button style={{ width: \"100%\" }} onClick={e => logOutUser(e)}>log out</Button></Menu.Item>\n        </>;\n    }\n\n    return (\n        <>\n            <Row className=\"header\" align=\"middle\">\n                <Col className=\"gutter-row\" xs={{ span: 10, offset: 0 }} sm={{ span: 10, offset: 4 }} md={{ span: 6, offset: 2 }} lg={{ span: 6, offset: 2 }} xl={{ span: 6, offset: 2 }} xxl={{ span: 6, offset: 2 }} >\n                    <Row>\n                        <Col xs={{ span: 3, offset: 3 }} sm={{ span: 0, offset: 0 }} md={{ span: 0, offset: 0 }} lg={{ span: 0, offset: 0 }} xl={{ span: 0, offset: 0 }}>\n                            <MenuOutlined onClick={showDrawer} />\n                        </Col>\n                        <Col xs={{ span: 12, offset: 2 }} sm={{ span: 7, offset: 0 }} md={{ span: 7, offset: 0 }} lg={{ span: 8, offset: 0 }} xl={{ span: 8, offset: 0 }}>\n                            <div style={{ color: \"#000\" }}>Fashion</div>\n                        </Col>\n                        <Col xs={{ span: 0, offset: 0 }} sm={{ span: 3, offset: 2 }} md={{ span: 3, offset: 2 }} lg={{ span: 2, offset: 3 }} xl={{ span: 2, offset: 3 }}>\n                            <Dropdown overlay={<Menu onClick={onClick}>{menuOption}</Menu>}>\n                                <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                                    Men\n                                </a>\n                            </Dropdown>\n                        </Col>\n                        <Col xs={{ span: 0, offset: 0 }} sm={{ span: 3, offset: 2 }} md={{ span: 3, offset: 2 }} lg={{ span: 2, offset: 3 }} xl={{ span: 2, offset: 3 }}>\n                            <Dropdown overlay={<Menu onClick={onClick}>{menuOption}</Menu>}>\n                                <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                                    Women\n                                </a>\n                            </Dropdown>\n                        </Col>\n                        <Col xs={{ span: 0, offset: 0 }} sm={{ span: 3, offset: 4 }} md={{ span: 3, offset: 4 }} lg={{ span: 2, offset: 4 }} xl={{ span: 2, offset: 4 }}>\n                            <Dropdown overlay={<Menu onClick={onClick}>{menuOption}</Menu>}>\n                                <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                                    Kids\n                                </a>\n                            </Dropdown>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col className=\"gutter-row header-search-box\" xs={{ span: 0, offset: 0 }} sm={{ span: 0, offset: 0 }} md={{ span: 8, offset: 2 }} lg={{ span: 8, offset: 3 }} xl={{ span: 8, offset: 3 }} xxl={{ span: 8, offset: 4 }}>\n                    <Input.Search allowClear placeholder=\"Search\" onSearch={onSearch} />\n                </Col>\n                <Col className=\"gutter-row\" xs={{ span: 10, offset: 4 }} sm={{ span: 4, offset: 4 }} md={{ span: 4, offset: 1 }} lg={{ span: 4, offset: 1 }} xl={{ span: 4, offset: 1 }} xxl={{ span: 3, offset: 1 }} >\n                    <Row>\n                        <Col xs={{ span: 6, offset: 5 }} sm={{ span: 6, offset: 0 }} md={{ span: 0, offset: 0 }} lg={{ span: 0, offset: 0 }} xl={{ span: 0, offset: 0 }} xxl={{ span: 0, offset: 0 }} >\n                            <Avatar shape=\"square\" className=\"header-icon\" icon={<SearchOutlined onClick={onClickNotification} />} />\n\n                        </Col>\n                        <Col xs={{ span: 0, offset: 0 }} sm={{ span: 0, offset: 0 }} md={{ span: 6, offset: 2 }} lg={{ span: 4, offset: 2 }} xl={{ span: 4, offset: 3 }} xxl={{ span: 4, offset: 2 }} >\n                            <Dropdown placement=\"bottomCenter\" overlay={<Menu style={{ width: '200px' }} >{userMenuOption}</Menu>}>\n                                <Avatar shape=\"circle\" className=\"header-icon\" icon={<UserOutlined />} />\n                            </Dropdown>\n                        </Col>\n                        <Col xs={{ span: 6, offset: 0 }} sm={{ span: 6, offset: 3 }} md={{ span: 6, offset: 2 }} lg={{ span: 4, offset: 2 }} xl={{ span: 4, offset: 3 }} xxl={{ span: 4, offset: 2 }} >\n                            <Avatar shape=\"square\" className=\"header-icon\" icon={<StarOutlined onClick={onClickCart} />} />\n                        </Col>\n                        <Col xs={{ span: 6, offset: 0 }} sm={{ span: 6, offset: 3 }} md={{ span: 6, offset: 2 }} lg={{ span: 4, offset: 2 }} xl={{ span: 4, offset: 4 }} xxl={{ span: 4, offset: 2 }} >\n                            <Avatar shape=\"square\" className=\"header-icon\" icon={<NotificationOutlined onClick={onClickNotification} />} />\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n            <Drawer\n                title={drawerTitile}\n                placement={\"left\"}\n                closable={false}\n                onClose={onClose}\n                visible={isVisible}\n                bodyStyle={{ padding: 0 }}\n                headerStyle={{ background: \"lightblue\" }}\n            >\n                <Menu mode=\"inline\" onClick={onDrawerOptionClick} openKeys={drawerOpenKeys} onOpenChange={handleOpenChange} >\n                    {menuOption}\n                </Menu>\n            </Drawer>\n        </>\n    );\n};","/home/dell/Desktop/Learning/JWT/client/src/pages/Register/Register.tsx",["87"],"import React, { useEffect } from 'react'\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useRegisterUserMutation } from 'src/generated/graphql';\nimport './index.scss';\nimport { Form, Input, Button, Card, message } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\nimport { getAccessToken } from 'src/accessToken';\n\n\nexport const Register: React.FC<RouteComponentProps> = ({ history }) => {\n    useEffect(() => {\n        const accessToken = getAccessToken();\n        if (accessToken !== '') {\n            history.push('./');\n        }\n    }, [])\n\n    const [registerUser] = useRegisterUserMutation()\n    const [form] = Form.useForm()\n    const onFinish = (values: any) => {\n        console.log('Received values of form: ', values);\n        if (values.password !== values.passwordConfirm) {\n            message.warn(\"Password doesn't match\")\n            return\n        }\n        return registerUser({\n            variables: {\n                email: values.email,\n                password: values.password\n            }\n        }).then(res => {\n            console.log(res)\n            history.push(\"/\");\n        })\n    };\n    const logIn = (values: any) => {\n        history.push(\"/login\");\n\n    }\n    const confrimPassword = (rule: any, value: any, callback: any) => {\n        console.log(value)\n        let { password } = form.getFieldsValue()\n        if (!value || value === password) {\n            callback();\n        }\n        else {\n            callback(\"Password doesn't match!\");\n        }\n    }\n\n    return (\n        <div className=\"register\">\n            <Card className=\"register-card\">\n                <Form\n                    form={form}\n                    name=\"normal_register\"\n                    className=\"register-form\"\n                    initialValues={{ email: '', password: '', passwordConfirm: '' }}\n                    onFinish={onFinish}\n                >\n                    <Form.Item\n                        name=\"email\"\n                        rules={[{ type: 'email', required: true, message: 'Please input your Email!' }]}\n                    >\n                        <Input placeholder=\"Email\" prefix={<UserOutlined className=\"site-form-item-icon\" />} />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Please input your Password!' }]}\n                    >\n                        <Input\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"passwordConfirm\"\n                        rules={[{ required: true, message: \"Please confrim your Password!\" }, { validator: confrimPassword }]}\n                    >\n                        <Input\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            type=\"password\"\n                            placeholder=\"Confirm Password\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"register-form-button\">\n                            Sign up\n                        </Button>\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"dashed\" className=\"register-form-button\" onClick={e => logIn(e)}>\n                            Log in\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </div>\n    );\n\n}; ",["88","89"],"/home/dell/Desktop/Learning/JWT/client/src/pages/Login/Login.tsx",["90"],"import React, { useEffect } from 'react'\nimport { RouteComponentProps } from 'react-router-dom';\nimport { getAccessToken, setAccessToken } from 'src/accessToken';\nimport { useLoginUserMutation, UserDetailsDocument, UserDetailsQuery } from 'src/generated/graphql';\nimport { Form, Input, Button, Card } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport './index.scss';\n\n\nexport const Login: React.FC<RouteComponentProps> = ({ history }) => {\n    useEffect(() => {\n        const accessToken = getAccessToken();\n        if (accessToken !== '') {\n            history.push('./');\n        }\n    }, [])\n    const [login] = useLoginUserMutation()\n    const [form] = Form.useForm();\n    const onFinish = (values: any) => {\n        return login({\n            variables: {\n                email: values.email,\n                password: values.password\n            },\n            update: (store, { data }) => {\n                if (data) {\n                    store.writeQuery<UserDetailsQuery>({\n                        query: UserDetailsDocument,\n                        data: {\n                            __typename: \"Query\",\n                            getUserDetails: data.loginUser.user\n                        }\n                    })\n                }\n                console.log('unbale to update user cache')\n            }\n        }).then(res => {\n            if (!res || res.errors || !res.data) {\n                console.log('err', res.errors)\n                return\n            }\n            console.log('res', res)\n            setAccessToken(res.data.loginUser.accessToken)\n            history.push(\"/\");\n        }).catch(err => {\n            console.log('err', err)\n        })\n\n    }\n    const signUp = (e: any) => {\n        history.push(\"/register\");\n    }\n\n    return (\n        <div className=\"login\">\n            <Card className=\"login-card\">\n                <Form\n                    form={form}\n                    name=\"normal_login\"\n                    className=\"login-form\"\n                    initialValues={{ email: '', password: '' }}\n                    onFinish={onFinish}\n                >\n                    <Form.Item\n                        name=\"email\"\n                        rules={[{ type: 'email', required: true, message: 'Please input your Email!' }]}\n                    >\n                        <Input placeholder=\"Email\" prefix={<UserOutlined className=\"site-form-item-icon\" />} />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Please input your Password!' }]}\n                    >\n                        <Input\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                            Log in\n                        </Button>\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"dashed\" className=\"login-form-button\" onClick={e => signUp(e)}>\n                            Sign up\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </div>\n    );\n} ",["91","92"],"/home/dell/Desktop/Learning/JWT/client/src/accessToken.ts",[],["93","94"],"/home/dell/Desktop/Learning/JWT/client/src/pages/Cart/Cart.tsx",["95"],"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from 'src/redux/reducers';\nimport { CartState } from 'src/redux/types/cart';\nimport { addItem } from 'src/redux/actions/carts';\n\ninterface CartProps {\n\n}\n\nexport const Cart: React.FC<CartProps> = ({ }) => {\n    const items = useSelector<RootState, CartState['items']>(\n        (state) => state.cart.items\n    );\n    console.log(items)\n    const dispatch = useDispatch();\n    const addNewItem = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        let item = {\n            id: \"123\",\n            name: 'new',\n            quantity: 2,\n            price: 100,\n            timestamp: 3\n        }\n        dispatch(addItem(item))\n    }\n    return (\n        <div>\n            cart details\n            {items.map(item => {\n                return <p>{item.id}</p>\n            })}\n\n            <button onClick={e => addNewItem(e)}>add new</button>\n        </div>\n    );\n}","/home/dell/Desktop/Learning/JWT/client/src/redux/reducers/cartReducer.ts",[],"/home/dell/Desktop/Learning/JWT/client/src/redux/types/cart.ts",[],"/home/dell/Desktop/Learning/JWT/client/src/redux/reducers/index.ts",[],"/home/dell/Desktop/Learning/JWT/client/src/redux/store/index.tsx",[],"/home/dell/Desktop/Learning/JWT/client/src/redux/actions/carts.ts",[],{"ruleId":"96","severity":1,"message":"97","line":7,"column":43,"nodeType":"98","messageId":"99","endLine":7,"endColumn":46},{"ruleId":"96","severity":1,"message":"97","line":8,"column":41,"nodeType":"98","messageId":"99","endLine":8,"endColumn":44},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"96","severity":1,"message":"97","line":10,"column":47,"nodeType":"98","messageId":"99","endLine":10,"endColumn":50},{"ruleId":"104","severity":1,"message":"105","line":132,"column":33,"nodeType":"106","endLine":132,"endColumn":100},{"ruleId":"104","severity":1,"message":"105","line":139,"column":33,"nodeType":"106","endLine":139,"endColumn":100},{"ruleId":"104","severity":1,"message":"105","line":146,"column":33,"nodeType":"106","endLine":146,"endColumn":100},{"ruleId":"107","severity":1,"message":"108","line":16,"column":8,"nodeType":"109","endLine":16,"endColumn":10,"suggestions":"110"},{"ruleId":"100","replacedBy":"111"},{"ruleId":"102","replacedBy":"112"},{"ruleId":"107","severity":1,"message":"108","line":16,"column":8,"nodeType":"109","endLine":16,"endColumn":10,"suggestions":"113"},{"ruleId":"100","replacedBy":"114"},{"ruleId":"102","replacedBy":"115"},{"ruleId":"100","replacedBy":"116"},{"ruleId":"102","replacedBy":"117"},{"ruleId":"96","severity":1,"message":"97","line":11,"column":43,"nodeType":"98","messageId":"99","endLine":11,"endColumn":46},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-native-reassign",["118"],"no-negated-in-lhs",["119"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["120"],["118"],["119"],["121"],["118"],["119"],["118"],["119"],"no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"122","fix":"124"},"Update the dependencies array to be: [history]",{"range":"125","text":"126"},{"range":"127","text":"126"},[584,586],"[history]",[625,627]]