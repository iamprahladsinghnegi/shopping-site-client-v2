[{"/home/divum/prahlad-projects/learning/JWT/client/src/App.tsx":"1","/home/divum/prahlad-projects/learning/JWT/client/src/redux/reducers/index.ts":"2","/home/divum/prahlad-projects/learning/JWT/client/src/pages/Header/Header.tsx":"3","/home/divum/prahlad-projects/learning/JWT/client/src/redux/actions/carts.ts":"4","/home/divum/prahlad-projects/learning/JWT/client/src/pages/Items/ItemsList.tsx":"5","/home/divum/prahlad-projects/learning/JWT/client/src/redux/types/cart.ts":"6","/home/divum/prahlad-projects/learning/JWT/client/src/components/Breadcrumb/Breadcrumb.tsx":"7","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/index.tsx":"8","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/App.tsx":"9","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/reducers/index.ts":"10","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Header/Header.tsx":"11","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/actions/carts.ts":"12","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/ItemsList.tsx":"13","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/types/cart.ts":"14","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/Breadcrumb/Breadcrumb.tsx":"15","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/generated/graphql.tsx":"16","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/util/index.ts":"17","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Home/Home.tsx":"18","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/ItemDetails.tsx":"19","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/CustomCard/CustomCard.tsx":"20","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/ItemView/ItemView.tsx":"21","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/ListView/ListView.tsx":"22","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/accessToken.ts":"23","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Login/Login.tsx":"24","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/reducers/cartReducer.ts":"25","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Cart/Cart.tsx":"26","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/constants/AppConstanat.ts":"27","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/Items.tsx":"28","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Register/Register.tsx":"29","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/store/index.tsx":"30","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/ALlitem.tsx":"31","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Bye.tsx":"32","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/CartItemView/CartItemView.tsx":"33","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/Routes.tsx":"34"},{"size":748,"mtime":1613900838000,"results":"35","hashOfConfig":"36"},{"size":211,"mtime":1612121200000,"results":"37","hashOfConfig":"36"},{"size":10748,"mtime":1613337895000,"results":"38","hashOfConfig":"36"},{"size":499,"mtime":1612120493000,"results":"39","hashOfConfig":"36"},{"size":18977,"mtime":1613513635000,"results":"40","hashOfConfig":"36"},{"size":488,"mtime":1612096562000,"results":"41","hashOfConfig":"36"},{"size":1523,"mtime":1613332721000,"results":"42","hashOfConfig":"36"},{"size":2618,"mtime":1617477031712,"results":"43","hashOfConfig":"44"},{"size":765,"mtime":1617477081452,"results":"45","hashOfConfig":"44"},{"size":211,"mtime":1612121200000,"results":"46","hashOfConfig":"44"},{"size":10411,"mtime":1617480764062,"results":"47","hashOfConfig":"44"},{"size":499,"mtime":1612120493000,"results":"48","hashOfConfig":"44"},{"size":11386,"mtime":1617038212081,"results":"49","hashOfConfig":"44"},{"size":488,"mtime":1612096562000,"results":"50","hashOfConfig":"44"},{"size":1523,"mtime":1613332721000,"results":"51","hashOfConfig":"44"},{"size":59646,"mtime":1616794438629,"results":"52","hashOfConfig":"44"},{"size":451,"mtime":1613335410000,"results":"53","hashOfConfig":"44"},{"size":3942,"mtime":1617480786580,"results":"54","hashOfConfig":"44"},{"size":13763,"mtime":1617038330601,"results":"55","hashOfConfig":"44"},{"size":2457,"mtime":1616957726309,"results":"56","hashOfConfig":"44"},{"size":2563,"mtime":1616274649449,"results":"57","hashOfConfig":"44"},{"size":3075,"mtime":1617480744608,"results":"58","hashOfConfig":"44"},{"size":292,"mtime":1612090362000,"results":"59","hashOfConfig":"44"},{"size":4569,"mtime":1613898667000,"results":"60","hashOfConfig":"44"},{"size":630,"mtime":1612121416000,"results":"61","hashOfConfig":"44"},{"size":6644,"mtime":1616961878889,"results":"62","hashOfConfig":"44"},{"size":2309,"mtime":1617038118490,"results":"63","hashOfConfig":"44"},{"size":706,"mtime":1617480815806,"results":"64","hashOfConfig":"44"},{"size":5581,"mtime":1617480824995,"results":"65","hashOfConfig":"44"},{"size":227,"mtime":1612119901000,"results":"66","hashOfConfig":"44"},{"size":1202,"mtime":1617480797937,"results":"67","hashOfConfig":"44"},{"size":519,"mtime":1611479125000,"results":"68","hashOfConfig":"44"},{"size":12516,"mtime":1617480717126,"results":"69","hashOfConfig":"44"},{"size":1133,"mtime":1613421516000,"results":"70","hashOfConfig":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v5wfed",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d56lih",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/divum/prahlad-projects/learning/JWT/client/src/App.tsx",[],"/home/divum/prahlad-projects/learning/JWT/client/src/redux/reducers/index.ts",[],"/home/divum/prahlad-projects/learning/JWT/client/src/pages/Header/Header.tsx",["148","149","150","151"],"/home/divum/prahlad-projects/learning/JWT/client/src/redux/actions/carts.ts",[],"/home/divum/prahlad-projects/learning/JWT/client/src/pages/Items/ItemsList.tsx",["152","153","154","155"],"/home/divum/prahlad-projects/learning/JWT/client/src/redux/types/cart.ts",[],"/home/divum/prahlad-projects/learning/JWT/client/src/components/Breadcrumb/Breadcrumb.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/index.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/App.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/reducers/index.ts",[],["156","157"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Header/Header.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/actions/carts.ts",[],["158","159"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/ItemsList.tsx",["160"],"import { Col, Layout, PageHeader, Row, Checkbox, Divider, Affix, Drawer, Select, List } from 'antd';\nimport { CheckboxValueType } from 'antd/lib/checkbox/Group';\nimport React, { useState } from 'react';\n\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport { NavBreadcrumb } from 'src/components/Breadcrumb/Breadcrumb';\nimport { CheckCircleTwoTone } from '@ant-design/icons';\n\nimport './index.scss';\nimport { valueType } from 'antd/lib/statistic/utils';\nimport { useGetAllItemIdsBySubCategoryWithFilterQuery } from 'src/generated/graphql';\nimport { ItemView } from 'src/components/ItemView/ItemView';\nimport { SORT_OPTIONS, COLOR_OPTIONS, PRICE_OPTIONS, DISCOUNT_OPTIONS } from '../../constants/AppConstanat'\n\ninterface ItemsListRouterProps {\n    category: string\n}\n\nexport const ItemsList: React.FC<ItemsListRouterProps> = ({ }) => {\n    const history = useHistory();\n    const { pathname } = useLocation();\n    const subCategory = pathname.split('/')[2]\n    const [filterColor, setFilterColor] = useState<Array<string | number | boolean>>([]);\n    const [filterCategory, setFilterCategory] = useState<Array<string | number | boolean>>([]);\n    const [filterDiscount, setFilterDiscount] = useState<Array<string | number | boolean>>([]);\n    const [filterPrice, setFilterPrice] = useState<Array<string | number | boolean>>([]);\n    const [isVisible, setVisible] = useState<boolean | undefined>(false);\n    const [drawerType, setDrawerType] = useState<string>('');\n    const [sortBy, setSortBy] = useState<valueType>(0);\n    const { category } = useParams<ItemsListRouterProps>();\n    let fillterOption = {\n        sort: SORT_OPTIONS[sortBy].key,\n        color: [],\n        price: [],\n        category: [],\n        discount: []\n    }\n    const { data: allitemIds, loading: itemIdsLoader, error: itemIdsError } = useGetAllItemIdsBySubCategoryWithFilterQuery({ variables: { subCategory, filterOptions: fillterOption } })\n\n    if (itemIdsError) {\n        history.replace('/items')\n    }\n\n    if (itemIdsLoader || !allitemIds) {\n        return <>Loading data..............</>\n    }\n\n    const plainOptions = ['Printed', 'Checks', 'Damge'];\n    const categoryOptions = plainOptions.map((item) => {\n        return <><Checkbox value={item}>{item}</Checkbox><br /> </>\n    })\n    const onChange = (checkedValue: CheckboxValueType[], type?: string): void => {\n        console.log('checked = ', type, checkedValue);\n        if (type === 'color') {\n            setFilterColor(checkedValue)\n        } else if (type === 'category') {\n            setFilterCategory(checkedValue)\n        } else if (type === 'discount') {\n            setFilterDiscount(checkedValue)\n        } else {\n            setFilterPrice(checkedValue)\n        }\n    }\n\n    const priceOptions = PRICE_OPTIONS.map((item, index) => {\n        return <><Checkbox value={index} >{item}</Checkbox><br /> </>\n    });\n\n    const colorOptions = COLOR_OPTIONS.map((item, index) => {\n        return <><Checkbox value={item}><span className=\"label-color\" style={{ backgroundColor: item }}></span>{item}</Checkbox><br /> </>\n    });\n\n    const discountOptions = DISCOUNT_OPTIONS.map((item, index) => {\n        return <><Checkbox value={index}>{item}</Checkbox><br /> </>\n    });\n\n    const resetFilters = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n        setFilterColor([]);\n        setFilterCategory([]);\n        setFilterDiscount([]); // state contains index of discountPlanOption\n        setFilterPrice([]);// state contains index of pricePlainOptions\n    }\n    const isClearOption = (filterColor.length === 0 && filterCategory.length === 0 && filterDiscount.length === 0 && filterPrice.length === 0) ? false : true\n\n    const filterHeader: JSX.Element = <div style={{ display: 'flex', flexDirection: \"row\", justifyContent: 'space-between' }}>\n        <text>\n            FILTERS\n        </text>\n        {isClearOption && <button style={{ border: 0, background: \"transparent\", outline: 'none' }} onClick={resetFilters}>Clear All</button>}\n    </div>\n\n    const filterOptions: JSX.Element = <>\n        <div className=\"item-listing-layout-sider-content-category\" >\n            <text>\n                CATEGORIES\n            </text>\n            <div className=\"item-listing-layout-sider-content-category-options\">\n                <Checkbox.Group value={filterCategory} onChange={e => { onChange(e, 'category') }} >\n                    {categoryOptions}\n                </Checkbox.Group>\n            </div>\n        </div>\n        <Divider />\n        <div className=\"item-listing-layout-sider-content-price\" >\n            <text>\n                PRICE\n            </text>\n            <div className=\"item-listing-layout-sider-content-price-options\">\n                <Checkbox.Group value={filterPrice} onChange={e => { onChange(e, 'price') }} >\n                    {priceOptions}\n                </Checkbox.Group>\n            </div>\n        </div>\n        <Divider />\n        <div className=\"item-listing-layout-sider-content-color\" >\n            <text>\n                COLOR\n            </text>\n            <div className=\"item-listing-layout-sider-content-color-options\">\n                <Checkbox.Group value={filterColor} onChange={e => { onChange(e, 'color') }} >\n                    {colorOptions}\n                </Checkbox.Group>\n            </div>\n        </div>\n        <Divider />\n        <div className=\"item-listing-layout-sider-content-discount\" >\n            <text>\n                DISCOUNT RANGE\n            </text>\n            <div className=\"item-listing-layout-sider-content-discount-options\">\n                <Checkbox.Group value={filterDiscount} onChange={e => { onChange(e, 'discount') }} >\n                    {discountOptions}\n                </Checkbox.Group>\n            </div>\n        </div>\n    </>;\n    const showDrawer = (event: React.MouseEvent<HTMLSpanElement, MouseEvent>, type: string): void => {\n        setDrawerType(type)\n        setVisible(true);\n    };\n\n    const onClose = (e?: React.KeyboardEvent<HTMLDivElement> | React.MouseEvent<HTMLDivElement | HTMLButtonElement>): void => {\n        setVisible(false);\n    };\n\n    const handleChange = (value: valueType): void => {\n        console.log(value)\n        if (sortBy === value) {\n            return\n        }\n        setSortBy(value)\n        if (drawerType === 'sort') {\n            onClose();\n        }\n    }\n\n    const sortOptions: JSX.Element = <>\n        <text>\n            SORT BY :\n        </text>\n        <Select value={sortBy} style={{ width: 200 }} onChange={handleChange}>\n            {\n                SORT_OPTIONS.map((item, index) => {\n                    return <Select.Option value={index}>{item.label}</Select.Option>\n                })\n            }\n        </Select>\n    </>\n\n    const drawerHeader: JSX.Element | string = drawerType === 'sort' ? \"SORT BY\" : filterHeader\n    const drawerContent: JSX.Element =\n        drawerType === 'sort' ?\n            <List\n                bordered\n                dataSource={SORT_OPTIONS}\n                renderItem={(item, index) => (\n                    <List.Item onClick={e => { handleChange(index) }}>\n                        {item.label}\n                        {sortBy === index &&\n                            <div style={{\n                                float: \"right\",\n                                textAlign: 'right'\n                            }}>\n                                <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                            </div>\n                        }\n                    </List.Item>\n                )}\n            />\n            :\n            <div className=\"item-listing-layout-sider-content\" style={{ padding: '10px 20px' }}>\n                {filterOptions}\n            </div>\n\n    return (\n        <div className=\"item-listing\">\n            <div className=\"item-listing-breadcrumb\" >\n                <NavBreadcrumb />\n            </div>\n            <Layout className=\"item-listing-layout\">\n                <Layout.Sider className=\"item-listing-layout-sider\" width={'15rem'}>\n                    <div className=\"item-listing-layout-sider-content\" style={{ padding: '10px 20px' }}>\n                        {filterHeader}\n                        <Divider />\n                        {filterOptions}\n                    </div>\n                </Layout.Sider>\n                <Layout.Content className=\"item-listing-layout-content\">\n                    <div className=\"item-listing-layout-content-main\">\n                        <PageHeader\n                            className=\"item-listing-layout-content-main-header\"\n                            title={category}\n                            extra={[sortOptions]}\n                        />\n\n                        <div className=\"item-listing-layout-content-main-items\">\n                            <Row style={{ margin: 0 }} gutter={24}>\n                                {/* {tempData.map(item => {\n                                    return <Col xs={12} sm={12} md={8} lg={8} xl={6} xxl={4} >\n                                        <CustomCard\n                                            type={'item-preview'}\n                                            param={item.id}\n                                            handleClick={handleClick}\n                                            onClickStar={handleClickStar}\n                                            hoverable={true}\n                                            styleName=\"preview-card\"\n                                            imageUrl={item.imageUrl}\n                                            title={item.title}\n                                            price={item.price}\n                                            stared={item.stared}\n                                            description={item.description} />\n                                    </Col>\n                                })} */}\n                                {allitemIds.getAllItemIdsBySubCategoryWithFilter.itemIds.map(item => {\n                                    return <Col xs={12} sm={12} md={8} lg={8} xl={6} xxl={4} >\n                                        <ItemView itemId={item} category={category} />\n                                    </Col>\n                                })}\n                            </Row>\n                        </div>\n\n                    </div>\n\n                    <Affix className=\"item-listing-layout-content-footer\" offsetBottom={0} >\n                        <button className=\"item-listing-layout-content-footer-content\" onClick={e => { showDrawer(e, \"sort\") }} >\n                            SORT\n                        </button>\n                        <button className=\"item-listing-layout-content-footer-content\" onClick={e => { showDrawer(e, \"filter\") }}>\n                            FILTER\n                        </button>\n                    </Affix>\n                </Layout.Content>\n            </Layout>\n            <Drawer\n                title={drawerHeader}\n                placement={drawerType === 'sort' ? \"bottom\" : \"right\"}\n                closable={false}\n                onClose={onClose}\n                visible={isVisible}\n                bodyStyle={{ padding: 0 }}\n                headerStyle={{ background: \"lightblue\" }}\n                height={300}\n            >\n                {drawerContent}\n            </Drawer>\n        </div>\n    );\n}",["161","162"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/types/cart.ts",[],["163","164"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/Breadcrumb/Breadcrumb.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/generated/graphql.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/util/index.ts",[],["165","166"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Home/Home.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/ItemDetails.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/CustomCard/CustomCard.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/ItemView/ItemView.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/ListView/ListView.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/accessToken.ts",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Login/Login.tsx",["167"],"import React, { useEffect } from 'react'\nimport { RouteComponentProps } from 'react-router-dom';\nimport { getAccessToken, setAccessToken } from 'src/accessToken';\nimport { useLoginUserMutation, UserDetailsDocument, UserDetailsQuery } from 'src/generated/graphql';\nimport { Form, Input, Button, Card } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport './index.scss';\n\ninterface loginFormProps {\n    email: string;\n    password: string;\n}\n\nexport const Login: React.FC<RouteComponentProps> = ({ history }) => {\n\n    // check for access token in loacl storage\n    useEffect(() => {\n        const accessToken = getAccessToken();\n        if (accessToken !== '') {\n            history.replace('./');\n        }\n    }, [])\n\n    // mutation for login\n    const [login] = useLoginUserMutation();\n\n    const [form] = Form.useForm();\n\n    // use mutation to check email and password is valid or not (use update to update you apollo clien cache)\n    // if yes set refresh token otherwise show error\n    const onFinish = (values: loginFormProps) => {\n        return login({\n            variables: {\n                email: values.email,\n                password: values.password\n            },\n            update: (store, { data }) => {\n                if (data && data.loginUser.__typename === \"LoginSuccess\") {\n                    store.writeQuery<UserDetailsQuery>({\n                        query: UserDetailsDocument,\n                        data: {\n                            __typename: \"Query\",\n                            getUserDetails: data.loginUser.user\n                        }\n                    })\n                } else {\n                    console.log('unbale to update user cache')\n                }\n            }\n        }).then(res => {\n            if (!res || res.errors || !res.data) {\n                return\n            }\n            if (res.data.loginUser.__typename === \"LoginSuccess\") {\n                //set access token \n                //access token used for protect graphql query/mutations\n                setAccessToken(res.data.loginUser.accessToken);\n\n                //navigate to home\n                history.push(\"/\");\n            }\n            else if (res.data.loginUser.__typename.endsWith(\"Error\")) {\n                // based on error code(1 for email and 2 for password) handle erros\n                // OR can use __typename to handle errors\n                if (res.data.loginUser.errorCode === \"1\") {\n                    return form.setFields([{ name: \"email\", errors: [\"Email not exists!\"] }])\n                }\n                return form.setFields([{ name: \"password\", errors: [\"Password not matched!\"] }])\n            }\n        }).catch(err => {\n            console.log('err', err)\n        })\n\n    }\n\n\n    const signUp = (event: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n        history.push(\"/register\");\n    }\n\n    return (\n        <div className=\"login\">\n            <Card className=\"login-card\">\n                <Form\n                    form={form}\n                    name=\"normal_login\"\n                    className=\"login-form\"\n                    initialValues={{ email: '', password: '' }}\n                    onFinish={onFinish}\n                >\n                    <Form.Item\n                        name=\"email\"\n                        rules={[{ type: 'email', required: true, message: 'Please input your Email!' }]}\n                    >\n                        <Input placeholder=\"Email\" prefix={<UserOutlined className=\"site-form-item-icon\" />} />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Please input your Password!' }]}\n                    >\n                        <Input\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                            Log in\n                        </Button>\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"dashed\" className=\"login-form-button\" onClick={signUp}>\n                            Sign up\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </div>\n    );\n} ",["168","169"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/reducers/cartReducer.ts",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Cart/Cart.tsx",["170"],"import { Button, Card, Col, Divider, Row, Skeleton, Empty } from 'antd';\nimport React from 'react';\nimport { CartItemView } from 'src/components/CartItemView/CartItemView';\nimport { useGetCartDetailsQuery } from 'src/generated/graphql';\nimport './index.scss';\ninterface CartProps {\n\n}\n\nexport const Cart: React.FC<CartProps> = ({ }) => {\n    const { data: cartData, loading, error } = useGetCartDetailsQuery({ fetchPolicy: 'network-only' });\n\n    if (error) {\n        //navigate to home\n        console.log(error);\n    }\n\n    console.log(cartData);\n    if (loading || !cartData?.getCartDetails) {\n        return <Skeleton />\n    }\n\n    let priceDetails = cartData.getCartDetails.items.reduce(function (accumulator, currentValue) {\n        return {\n            price: Number(accumulator.price) + (Number(currentValue.price) * Number(currentValue.quantity)),\n            priceWithoutDiscount: Number(accumulator.priceWithoutDiscount) + Math.ceil((((Number(currentValue.discount) + 100) * Number(currentValue.price)) * .01) * Number(currentValue.quantity)),\n        }\n    }, { price: 0, priceWithoutDiscount: 0 });\n\n    let totalPayable = priceDetails.price;\n\n    if (priceDetails.price < 500 && cartData.getCartDetails.items.length > 0) {\n        totalPayable += 50;\n    }\n\n    return (\n        <div className=\"cart\">\n            <Row gutter={24}>\n                <Col xs={{ span: 24, offset: 0 }} sm={{ span: 24, offset: 0 }} md={{ span: 24, offset: 0 }} lg={{ span: 16, offset: 0 }} xl={{ span: 16, offset: 0 }} xxl={{ span: 16, offset: 0 }} >\n                    {\n                        cartData.getCartDetails.count === 0 ?\n                            <Card bordered className=\"cart-empty\">\n                                <Empty description={<p>No item found in cart, Please add items to cart.</p>} image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                            </Card>\n                            :\n                            cartData.getCartDetails.items.map((ele, index) => {\n                                return <CartItemView cartId={cartData.getCartDetails.cartId} itemId={ele.itemId} size={ele.size} quantity={ele.quantity} />\n                            })\n                    }\n                </Col>\n                <Col xs={{ span: 24, offset: 0 }} sm={{ span: 24, offset: 0 }} md={{ span: 24, offset: 0 }} lg={{ span: 8, offset: 0 }} xl={{ span: 8, offset: 0 }} xxl={{ span: 8, offset: 0 }}>\n                    <Card\n                        className=\"cart-info\"\n                        style={{ marginTop: 16 }}\n                    >\n                        <div className='cart-info-content'>\n                            <h3>\n                                PRICE DETAILS ({cartData.getCartDetails.count} Items)\n                            </h3>\n                            <Divider />\n                            <div className=\"cart-info-content-priceDetails\">\n                                <p>\n                                    <span className=\"cart-info-content-priceDetails-left\">\n                                        Total MRP\n                                  </span>\n                                    <span className=\"cart-info-content-priceDetails-right\">\n                                        &#8377; {priceDetails.priceWithoutDiscount}\n                                    </span>\n                                </p>\n                                <p>\n                                    <span className=\"cart-info-content-priceDetails-left\">\n                                        Dicount on MRP\n                                  </span>\n                                    <span className=\"cart-info-content-priceDetails-right color-green\">\n                                        - &#8377; {priceDetails.priceWithoutDiscount - priceDetails.price}\n                                    </span>\n                                </p>\n                                <p>\n                                    <span className=\"cart-info-content-priceDetails-left\">\n                                        Coupon Discount\n                                  </span>\n                                    <span className=\"cart-info-content-priceDetails-right\">\n                                        &#8377; 0\n                                  </span>\n                                </p>\n                                {\n                                    cartData.getCartDetails.items.length > 0 &&\n                                    <p>\n                                        <span className=\"cart-info-content-priceDetails-left\">\n                                            Conevnience Fee\n                                        </span>\n                                        <span className=\"cart-info-content-priceDetails-right\">\n                                            {priceDetails.price >= 500 ?\n                                                <>\n                                                    <span className=\"cart-info-content-priceDetails-right-line\">\n                                                        <span>&#8377; 50</span>\n                                                    </span>\n                                                    <span className=\"color-green\">\n                                                        FREE\n                                             </span>\n                                                </>\n                                                :\n                                                <span>&#8377; 50</span>}\n                                        </span>\n                                    </p>\n\n                                }\n                            </div>\n                            <Divider />\n                            <div className=\"cart-info-content-priceTotal\">\n                                <h3>\n                                    <span>\n                                        Total Amount\n                                    </span>\n                                    <span className=\"cart-info-content-priceTotal-right\">\n                                        &#8377; {totalPayable}\n                                    </span>\n                                </h3>\n                            </div>\n                        </div>\n                        <div className=\"cart-info-footer\">\n                            <Button disabled={totalPayable === 0 ? true : false} type=\"primary\">\n                                Place Order\n                            </Button>\n                        </div>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n}","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/constants/AppConstanat.ts",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/Items.tsx",["171"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Register/Register.tsx",["172"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/store/index.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/ALlitem.tsx",["173"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Bye.tsx",["174"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/CartItemView/CartItemView.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/Routes.tsx",[],{"ruleId":"175","severity":1,"message":"176","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"180","line":155,"column":33,"nodeType":"181","endLine":155,"endColumn":100},{"ruleId":"179","severity":1,"message":"180","line":162,"column":33,"nodeType":"181","endLine":162,"endColumn":100},{"ruleId":"179","severity":1,"message":"180","line":169,"column":33,"nodeType":"181","endLine":169,"endColumn":100},{"ruleId":"175","severity":1,"message":"182","line":1,"column":88,"nodeType":"177","messageId":"178","endLine":1,"endColumn":92},{"ruleId":"183","severity":1,"message":"184","line":49,"column":59,"nodeType":"185","messageId":"186","endLine":49,"endColumn":62},{"ruleId":"175","severity":1,"message":"187","line":50,"column":24,"nodeType":"177","messageId":"178","endLine":50,"endColumn":37},{"ruleId":"175","severity":1,"message":"188","line":71,"column":11,"nodeType":"177","messageId":"178","endLine":71,"endColumn":21},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"189","replacedBy":"193"},{"ruleId":"191","replacedBy":"194"},{"ruleId":"183","severity":1,"message":"184","line":19,"column":59,"nodeType":"185","messageId":"186","endLine":19,"endColumn":62},{"ruleId":"189","replacedBy":"195"},{"ruleId":"191","replacedBy":"196"},{"ruleId":"189","replacedBy":"197"},{"ruleId":"191","replacedBy":"198"},{"ruleId":"189","replacedBy":"199"},{"ruleId":"191","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":22,"column":8,"nodeType":"203","endLine":22,"endColumn":10,"suggestions":"204"},{"ruleId":"189","replacedBy":"205"},{"ruleId":"191","replacedBy":"206"},{"ruleId":"183","severity":1,"message":"184","line":10,"column":43,"nodeType":"185","messageId":"186","endLine":10,"endColumn":46},{"ruleId":"183","severity":1,"message":"184","line":11,"column":45,"nodeType":"185","messageId":"186","endLine":11,"endColumn":48},{"ruleId":"201","severity":1,"message":"202","line":27,"column":8,"nodeType":"203","endLine":27,"endColumn":10,"suggestions":"207"},{"ruleId":"183","severity":1,"message":"184","line":12,"column":49,"nodeType":"185","messageId":"186","endLine":12,"endColumn":52},{"ruleId":"183","severity":1,"message":"184","line":8,"column":41,"nodeType":"185","messageId":"186","endLine":8,"endColumn":44},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Card' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'setIsFetching' is assigned a value but never used.","'id' is assigned a value but never used.","no-native-reassign",["208"],"no-negated-in-lhs",["209"],["208"],["209"],["208"],["209"],["208"],["209"],["208"],["209"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["210"],["208"],["209"],["211"],"no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"212","fix":"214"},"Update the dependencies array to be: [history]",{"range":"215","text":"216"},{"range":"217","text":"216"},[746,748],"[history]",[881,883]]