[{"/home/divum/prahlad-projects/learning/JWT/client/src/App.tsx":"1","/home/divum/prahlad-projects/learning/JWT/client/src/redux/reducers/index.ts":"2","/home/divum/prahlad-projects/learning/JWT/client/src/pages/Header/Header.tsx":"3","/home/divum/prahlad-projects/learning/JWT/client/src/redux/actions/carts.ts":"4","/home/divum/prahlad-projects/learning/JWT/client/src/pages/Items/ItemsList.tsx":"5","/home/divum/prahlad-projects/learning/JWT/client/src/redux/types/cart.ts":"6","/home/divum/prahlad-projects/learning/JWT/client/src/components/Breadcrumb/Breadcrumb.tsx":"7","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/index.tsx":"8","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/App.tsx":"9","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/reducers/index.ts":"10","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Header/Header.tsx":"11","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/actions/carts.ts":"12","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/ItemsList.tsx":"13","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/types/cart.ts":"14","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/Breadcrumb/Breadcrumb.tsx":"15","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/generated/graphql.tsx":"16","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/util/index.ts":"17","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Home/Home.tsx":"18","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/ItemDetails.tsx":"19","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/CustomCard/CustomCard.tsx":"20","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/ItemView/ItemView.tsx":"21","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/ListView/ListView.tsx":"22","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/accessToken.ts":"23","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Login/Login.tsx":"24","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/reducers/cartReducer.ts":"25","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Cart/Cart.tsx":"26","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/constants/AppConstanat.ts":"27","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/Items.tsx":"28"},{"size":748,"mtime":1613900838000,"results":"29","hashOfConfig":"30"},{"size":211,"mtime":1612121200000,"results":"31","hashOfConfig":"30"},{"size":10748,"mtime":1613337895000,"results":"32","hashOfConfig":"30"},{"size":499,"mtime":1612120493000,"results":"33","hashOfConfig":"30"},{"size":18977,"mtime":1613513635000,"results":"34","hashOfConfig":"30"},{"size":488,"mtime":1612096562000,"results":"35","hashOfConfig":"30"},{"size":1523,"mtime":1613332721000,"results":"36","hashOfConfig":"30"},{"size":2584,"mtime":1613316576000,"results":"37","hashOfConfig":"38"},{"size":748,"mtime":1613900838000,"results":"39","hashOfConfig":"38"},{"size":211,"mtime":1612121200000,"results":"40","hashOfConfig":"38"},{"size":9626,"mtime":1614618496581,"results":"41","hashOfConfig":"38"},{"size":499,"mtime":1612120493000,"results":"42","hashOfConfig":"38"},{"size":13964,"mtime":1614709697227,"results":"43","hashOfConfig":"38"},{"size":488,"mtime":1612096562000,"results":"44","hashOfConfig":"38"},{"size":1523,"mtime":1613332721000,"results":"45","hashOfConfig":"38"},{"size":37292,"mtime":1615025357920,"results":"46","hashOfConfig":"38"},{"size":451,"mtime":1613335410000,"results":"47","hashOfConfig":"38"},{"size":6108,"mtime":1614374645250,"results":"48","hashOfConfig":"38"},{"size":11121,"mtime":1615053959428,"results":"49","hashOfConfig":"38"},{"size":2407,"mtime":1614544039361,"results":"50","hashOfConfig":"38"},{"size":2534,"mtime":1615027571750,"results":"51","hashOfConfig":"38"},{"size":1763,"mtime":1613597208000,"results":"52","hashOfConfig":"38"},{"size":292,"mtime":1612090362000,"results":"53","hashOfConfig":"38"},{"size":4569,"mtime":1613898667000,"results":"54","hashOfConfig":"38"},{"size":630,"mtime":1612121416000,"results":"55","hashOfConfig":"38"},{"size":981,"mtime":1612121091000,"results":"56","hashOfConfig":"38"},{"size":121,"mtime":1615017861228,"results":"57","hashOfConfig":"38"},{"size":736,"mtime":1613228112000,"results":"58","hashOfConfig":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v5wfed",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d56lih",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"89"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/divum/prahlad-projects/learning/JWT/client/src/App.tsx",[],"/home/divum/prahlad-projects/learning/JWT/client/src/redux/reducers/index.ts",[],"/home/divum/prahlad-projects/learning/JWT/client/src/pages/Header/Header.tsx",["125","126","127","128"],"/home/divum/prahlad-projects/learning/JWT/client/src/redux/actions/carts.ts",[],"/home/divum/prahlad-projects/learning/JWT/client/src/pages/Items/ItemsList.tsx",["129","130","131","132"],"/home/divum/prahlad-projects/learning/JWT/client/src/redux/types/cart.ts",[],"/home/divum/prahlad-projects/learning/JWT/client/src/components/Breadcrumb/Breadcrumb.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/index.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/App.tsx",[],["133","134"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/reducers/index.ts",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Header/Header.tsx",["135","136"],"import React, { useEffect, useState } from 'react';\nimport { Avatar, Dropdown, Drawer, message, Menu, Row, Col, Input, Button } from 'antd';\nimport './index.scss';\nimport \"antd/dist/antd.css\";\nimport { UserOutlined, NotificationOutlined, StarOutlined, SearchOutlined, MenuOutlined, ArrowLeftOutlined } from '@ant-design/icons';\nimport { setAccessToken } from 'src/accessToken';\nimport { useGetAllCategoryAndSubCategoryNameQuery, useLogoutUserMutation, useUserDetailsQuery } from 'src/generated/graphql';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { getHeaderText } from 'src/util';\n\ninterface HeaderProps {\n}\n\ninterface MenuClickEventHandlerProps {\n    key: React.Key;\n    keyPath: React.Key[];\n    item: React.ReactInstance;\n    domEvent: React.MouseEvent<HTMLElement>;\n}\n\nexport const Header: React.FC<HeaderProps> = () => {\n    const { data: userData, loading: userLoading } = useUserDetailsQuery()\n    const [logoutUser, { client }] = useLogoutUserMutation()\n    const [isVisible, setVisible] = useState<boolean | undefined>(false);\n    const history = useHistory();\n    const { pathname } = useLocation();\n    const rootSubmenuKeys: string[] = ['1', '2', '3'];\n    const [drawerOpenKeys, setdrawerOpenKeys] = useState<string[]>([]);\n    const { data: categoryData, loading: categoryLoading } = useGetAllCategoryAndSubCategoryNameQuery();\n\n    // const [currentWindow, setCurrentWindow] = useState(window.innerWidth);\n\n    // useEffect(() => {\n    //     window.addEventListener(\"resize\", (ev) => {\n    //         setCurrentWindow(window.innerWidth)\n    //     })\n    // }, []);\n\n    if (userLoading || categoryLoading) {\n        return <></>\n    }\n    console.log(categoryData)\n    const showDrawer = (event: React.MouseEvent<HTMLSpanElement, MouseEvent>): void => {\n        setVisible(true);\n    };\n\n    const onClose = (e?: React.KeyboardEvent<HTMLDivElement> | React.MouseEvent<HTMLDivElement | HTMLButtonElement>): void => {\n        setVisible(false);\n    };\n\n    const logOutUser = (e: any) => {\n        return logoutUser().then(res => {\n            setAccessToken('');\n            client.resetStore();\n            history.push('./');\n        })\n    }\n\n    const handleOpenChange = (keys: any): void => {\n        const latestOpenKey: string = keys.find((key: string) => drawerOpenKeys.indexOf(key) === -1);\n        if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n            setdrawerOpenKeys(keys);\n        } else {\n            setdrawerOpenKeys(latestOpenKey ? [latestOpenKey] : []);\n        }\n    };\n\n    const onDrawerOptionClick = (key: MenuClickEventHandlerProps): void => {\n        onClick(key)\n        onClose()\n    }\n\n    const onClick = (key: MenuClickEventHandlerProps): void => {\n        history.push(`/items/${key.key}`)\n    };\n\n    const onClickCart = (event: React.MouseEvent<HTMLSpanElement, MouseEvent>): void => {\n        history.push('/cart')\n    }\n\n    const onSearch = (value: string, event?: React.ChangeEvent<HTMLInputElement> | React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLInputElement>): void => {\n        console.log(value)\n    }\n    const onClickNotification = (event: React.MouseEvent<HTMLSpanElement, MouseEvent>): void => {\n        console.log('onClickNotification')\n    }\n\n    const drawerTitile = <>\n        <div className=\"header-drawer-title\">\n            Profile\n        </div>\n    </>;\n\n    let userMenuOption: any = null;\n\n    if (!userData || !userData.getUserDetails) {\n        userMenuOption = <>\n            <Menu.Item key=\"login\" ><Link to=\"/login\">Log in</Link></Menu.Item>\n            <Menu.Item key=\"signin\"><Link to=\"/register\">register</Link></Menu.Item>\n        </>;\n    } else {\n        userMenuOption = <>\n            <Menu.Item key=\"login\" >{userData.getUserDetails.email}</Menu.Item>\n            <Menu.Item key=\"Casuals\">Profile</Menu.Item>\n            <Menu.Item key=\"logout\"><Button style={{ width: \"100%\" }} onClick={e => logOutUser(e)}>log out</Button></Menu.Item>\n        </>;\n    }\n\n    let menuOption: JSX.Element[] | null = null;\n\n    if (!categoryData || !categoryData.getAllCategoryAndSubCategoryName) {\n        //use default menu\n    } else {\n        // let categories: JSX.Element[] = [];\n        // categoryData.getAllCategoryAndSubCategoryName.forEach((element, index) => {\n        //     let subCategories: JSX.Element[] = []\n        //     element.subCategory.forEach(ele => {\n        //         subCategories.push(<Menu.Item key={ele}>{ele}</Menu.Item>)\n        //     })\n        //     categories.push(<Menu.SubMenu key={index} title={element.category}>{subCategories}</Menu.SubMenu>)\n        // })\n        // menuOption = categories\n        menuOption = categoryData.getAllCategoryAndSubCategoryName.map((element, index) => {\n            return <Menu.SubMenu key={index} title={element.category}>{element.subCategory.map(ele => {\n                return <Menu.Item key={ele}>{ele}</Menu.Item>\n            })}</Menu.SubMenu>\n        })\n    }\n\n\n    const handleBack = (): void => {\n        history.goBack();\n    }\n    const headerIcon: JSX.Element = pathname === '/' ? <MenuOutlined onClick={showDrawer} /> : <ArrowLeftOutlined onClick={handleBack} />\n    const headerText: string = getHeaderText(pathname);\n\n    return (\n        <>\n            <Row className=\"header\" align=\"middle\">\n                <Col className=\"gutter-row\" xs={{ span: 10, offset: 0 }} sm={{ span: 16, offset: 2 }} md={{ span: 12, offset: 2 }} lg={{ span: 10, offset: 2 }} xl={{ span: 10, offset: 2 }} xxl={{ span: 9, offset: 2 }} >\n                    <Row>\n                        <Col xs={{ span: 3, offset: 3 }} sm={{ span: 0, offset: 0 }} md={{ span: 0, offset: 0 }} lg={{ span: 0, offset: 0 }} xl={{ span: 0, offset: 0 }} xxl={{ span: 0, offset: 0 }}>\n                            {headerIcon}\n                        </Col>\n                        <Col xs={{ span: 12, offset: 2 }} sm={{ span: 0, offset: 0 }} md={{ span: 0, offset: 0 }} lg={{ span: 0, offset: 0 }} xl={{ span: 0, offset: 0 }} xxl={{ span: 0, offset: 0 }}>\n                            <span>{headerText}</span>\n                        </Col>\n                        <Col xs={{ span: 0, offset: 2 }} sm={{ span: 4, offset: 0 }} md={{ span: 4, offset: 0 }} lg={{ span: 4, offset: 0 }} xl={{ span: 4, offset: 0 }} xxl={{ span: 6, offset: 0 }}>\n                            <span>Fashion</span>\n                        </Col>\n                        <Col xs={{ span: 0, offset: 0 }} sm={{ span: 20, offset: 0 }} md={{ span: 20, offset: 0 }} lg={{ span: 20, offset: 0 }} xl={{ span: 20, offset: 0 }} xxl={{ span: 18, offset: 0 }}>\n                            <Menu style={{ background: 'transparent', border: 0, lineHeight: '24px' }} mode=\"horizontal\" onClick={onClick}>{menuOption}</Menu>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col className=\"gutter-row header-search-box\" xs={{ span: 0, offset: 0 }} sm={{ span: 0, offset: 0 }} md={{ span: 4, offset: 0 }} lg={{ span: 6, offset: 1 }} xl={{ span: 6, offset: 1 }} xxl={{ span: 8, offset: 1 }}>\n                    <Input.Search allowClear placeholder=\"Search\" onSearch={onSearch} />\n                </Col>\n                <Col className=\"gutter-row\" xs={{ span: 10, offset: 4 }} sm={{ span: 4, offset: 0 }} md={{ span: 4, offset: 1 }} lg={{ span: 4, offset: 1 }} xl={{ span: 4, offset: 1 }} xxl={{ span: 3, offset: 1 }} >\n                    <Row>\n                        <Col xs={{ span: 6, offset: 5 }} sm={{ span: 6, offset: 0 }} md={{ span: 0, offset: 0 }} lg={{ span: 0, offset: 0 }} xl={{ span: 0, offset: 0 }} xxl={{ span: 0, offset: 0 }} >\n                            <Avatar shape=\"square\" className=\"header-icon\" icon={<SearchOutlined onClick={onClickNotification} />} />\n\n                        </Col>\n                        <Col xs={{ span: 0, offset: 0 }} sm={{ span: 0, offset: 0 }} md={{ span: 6, offset: 2 }} lg={{ span: 4, offset: 2 }} xl={{ span: 4, offset: 3 }} xxl={{ span: 4, offset: 2 }} >\n                            <Dropdown placement=\"bottomCenter\" overlay={<Menu style={{ width: '200px' }} >{userMenuOption}</Menu>}>\n                                <Avatar shape=\"circle\" className=\"header-icon\" icon={<UserOutlined />} />\n                            </Dropdown>\n                        </Col>\n                        <Col xs={{ span: 6, offset: 0 }} sm={{ span: 6, offset: 3 }} md={{ span: 6, offset: 2 }} lg={{ span: 4, offset: 2 }} xl={{ span: 4, offset: 3 }} xxl={{ span: 4, offset: 2 }} >\n                            <Avatar shape=\"square\" className=\"header-icon\" icon={<StarOutlined onClick={onClickCart} />} />\n                        </Col>\n                        <Col xs={{ span: 6, offset: 0 }} sm={{ span: 6, offset: 3 }} md={{ span: 6, offset: 2 }} lg={{ span: 4, offset: 2 }} xl={{ span: 4, offset: 4 }} xxl={{ span: 4, offset: 2 }} >\n                            <Avatar shape=\"square\" className=\"header-icon\" icon={<NotificationOutlined onClick={onClickNotification} />} />\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n            <Drawer\n                title={drawerTitile}\n                placement={\"left\"}\n                closable={false}\n                onClose={onClose}\n                visible={isVisible}\n                bodyStyle={{ padding: 0 }}\n                headerStyle={{ background: \"lightblue\" }}\n            >\n                <Menu mode=\"inline\" onClick={onDrawerOptionClick} openKeys={drawerOpenKeys} onOpenChange={handleOpenChange} >\n                    {menuOption}\n                </Menu>\n            </Drawer>\n        </>\n    );\n};",["137","138"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/actions/carts.ts",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/ItemsList.tsx",["139","140","141","142","143","144","145"],"import { Col, Layout, PageHeader, Row, Checkbox, Divider, Affix, Drawer, Select, List, Card } from 'antd';\nimport { CheckboxValueType } from 'antd/lib/checkbox/Group';\nimport React, { useEffect, useState } from 'react';\n\n// import {placementType } from '/antd/lib/drawer/index';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport { NavBreadcrumb } from 'src/components/Breadcrumb/Breadcrumb';\nimport { CustomCard } from 'src/components/CustomCard/CustomCard';\nimport { CheckCircleTwoTone } from '@ant-design/icons';\n\nimport './index.scss';\nimport { valueType } from 'antd/lib/statistic/utils';\nimport { useGetAllItemIdsBySubCategoryQuery, useGetItemDetailsByIdQuery } from 'src/generated/graphql';\nimport { ItemView } from 'src/components/ItemView/ItemView';\nimport { SORT_OPTIONS } from '../../constants/AppConstanat'\n\ninterface ItemsListRouterProps {\n    category: string\n}\ninterface ITempData {\n    id: string;\n    imageUrl: string;\n    title: string;\n    description: string;\n    price: number;\n    stared: boolean;\n}\n\nexport const ItemsList: React.FC<ItemsListRouterProps> = ({ }) => {\n    const history = useHistory();\n    const { pathname } = useLocation();\n    const subCategory = pathname.split('/')[2]\n    const [filterColor, setFilterColor] = useState<Array<string | number | boolean>>([]);\n    const [filterCategory, setFilterCategory] = useState<Array<string | number | boolean>>([]);\n    const [filterDiscount, setFilterDiscount] = useState<Array<string | number | boolean>>([]);\n    const [filterPrice, setFilterPrice] = useState<Array<string | number | boolean>>([]);\n    const [isVisible, setVisible] = useState<boolean | undefined>(false);\n    const [drawerType, setDrawerType] = useState<string>('')\n    const [sortBy, setSortBy] = useState<valueType>(0)\n    const { category } = useParams<ItemsListRouterProps>();\n    let fillterOption = {\n        sort: SORT_OPTIONS[sortBy],\n        color: [],\n        price: [],\n        category: [],\n        discount: []\n    }\n    const { data: allitemIds, loading: itemIdsLoader, error: itemIdsError } = useGetAllItemIdsBySubCategoryQuery({ variables: { subCategory } })\n\n    if (itemIdsError) {\n        history.replace('/items')\n    }\n\n    if (itemIdsLoader || !allitemIds) {\n        return <>Loading data..............</>\n    }\n\n    const plainOptions = ['Printed', 'Checks', 'Damge'];\n    const categoryOptions = plainOptions.map((item) => {\n        return <><Checkbox value={item}>{item}</Checkbox><br /> </>\n    })\n    const onChange = (checkedValue: CheckboxValueType[], type?: string): void => {\n        console.log('checked = ', type, checkedValue);\n        if (type === 'color') {\n            setFilterColor(checkedValue)\n        } else if (type === 'category') {\n            setFilterCategory(checkedValue)\n        } else if (type === 'discount') {\n            setFilterDiscount(checkedValue)\n        } else {\n            setFilterPrice(checkedValue)\n        }\n    }\n\n    const pricePlainOptions = [\"Rs. 134 to Rs. 3051\", \"Rs. 3051 to Rs. 5968\", \"Rs. 5968 to Rs. 8885\", \"Rs. 8885 to Rs. 11802\"];\n    const priceOptions = pricePlainOptions.map((item, index) => {\n        return <><Checkbox value={index} >{item}</Checkbox><br /> </>\n    });\n\n    const colorPlainOptions = [\n        \"AliceBlue\",\n        \"AntiqueWhite\",\n        \"Aqua\",\n        \"Aquamarine\",\n        \"Azure\",\n        \"Beige\",\n        \"Bisque\",\n        \"Black\",\n        \"BlanchedAlmond\",\n        \"Blue\",\n        \"BlueViolet\",\n        \"Brown\",\n        \"BurlyWood\",\n        \"CadetBlue\",\n        \"Chartreuse\",\n        \"Chocolate\",\n        \"Coral\",\n        \"CornflowerBlue\",\n        \"Cornsilk\",\n        \"Crimson\",\n        \"Cyan\",\n        \"DarkBlue\",\n        \"DarkCyan\",\n        \"DarkGoldenRod\",\n        \"DarkGray\",\n        \"DarkGrey\",\n        \"DarkGreen\",\n        \"DarkKhaki\",\n        \"DarkMagenta\",\n        \"DarkOliveGreen\",\n        \"DarkOrange\",\n        \"DarkOrchid\",\n        \"DarkRed\",\n        \"DarkSlateBlue\",\n        \"DarkSlateGray\",\n        \"DarkSlateGrey\",\n        \"DarkTurquoise\",\n        \"DarkViolet\",\n        \"DeepPink\",\n        \"DeepSkyBlue\",\n        \"DimGray\",\n        \"DimGrey\",\n        \"DodgerBlue\",\n        \"FireBrick\",\n        \"FloralWhite\",\n        \"ForestGreen\",\n        \"Fuchsia\",\n        \"Gainsboro\",\n        \"GhostWhite\",\n        \"Gold\",\n        \"GoldenRod\",\n        \"Gray\",\n        \"Grey\",\n        \"Green\",\n        \"GreenYellow\",\n        \"HoneyDew\",\n        \"HotPink\",\n        \"IndianRed\",\n        \"Indigo\",\n        \"Ivory\",\n        \"MediumSeaGreen\",\n        \"MediumSlateBlue\",\n        \"MediumTurquoise\",\n        \"MediumVioletRed\",\n        \"MidnightBlue\",\n        \"MintCream\",\n        \"MistyRose\",\n        \"Moccasin\",\n        \"NavajoWhite\",\n        \"Navy\",\n        \"OldLace\",\n        \"Olive\",\n        \"OliveDrab\",\n        \"Orange\",\n        \"OrangeRed\",\n        \"Orchid\",\n        \"PaleGoldenRod\",\n        \"PaleGreen\",\n        \"PaleTurquoise\",\n        \"PaleVioletRed\",\n        \"PapayaWhip\",\n        \"SeaShell\",\n        \"Sienna\",\n        \"Silver\",\n        \"SkyBlue\",\n        \"SlateBlue\",\n        \"SlateGray\",\n        \"SlateGrey\",\n        \"Snow\",\n        \"WhiteSmoke\",\n        \"Yellow\",\n        \"YellowGreen\",\n    ];\n    const colorOptions = colorPlainOptions.map((item, index) => {\n        return <><Checkbox value={item}><span className=\"label-color\" style={{ backgroundColor: item }}></span>{item}</Checkbox><br /> </>\n    });\n    const discountPlanOption = [\n        \"10 % and above\",\n        \"20 % and above\",\n        \"30 % and above\",\n        \"40 % and above\",\n        \"50 % and above\",\n        \"60 % and above\",\n        \"70 % and above\",\n        \"80 % and above\"\n    ]\n    const discountOptions = discountPlanOption.map((item, index) => {\n        return <><Checkbox value={index}>{item}</Checkbox><br /> </>\n    });\n\n    const resetFilters = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n        setFilterColor([]);\n        setFilterCategory([]);\n        setFilterDiscount([]); // state contains index of discountPlanOption\n        setFilterPrice([]);// state contains index of pricePlainOptions\n    }\n    const isClearOption = (filterColor.length === 0 && filterCategory.length === 0 && filterDiscount.length === 0 && filterPrice.length === 0) ? false : true\n\n    const filterHeader: JSX.Element = <div style={{ display: 'flex', flexDirection: \"row\", justifyContent: 'space-between' }}>\n        <text>\n            FILTERS\n            </text>\n        {isClearOption && <button style={{ border: 0, background: \"transparent\", outline: 'none' }} onClick={resetFilters}>Clear All</button>}\n    </div>\n\n    const filterOptions: JSX.Element = <>\n        <div className=\"item-listing-layout-sider-content-category\" >\n            <text>\n                CATEGORIES\n            </text>\n            <div className=\"item-listing-layout-sider-content-category-options\">\n                <Checkbox.Group value={filterCategory} onChange={e => { onChange(e, 'category') }} >\n                    {categoryOptions}\n                </Checkbox.Group>\n            </div>\n        </div>\n        <Divider />\n        <div className=\"item-listing-layout-sider-content-price\" >\n            <text>\n                PRICE\n                            </text>\n            <div className=\"item-listing-layout-sider-content-price-options\">\n                <Checkbox.Group value={filterPrice} onChange={e => { onChange(e, 'price') }} >\n                    {priceOptions}\n                </Checkbox.Group>\n            </div>\n        </div>\n        <Divider />\n        <div className=\"item-listing-layout-sider-content-color\" >\n            <text>\n                COLOR\n                            </text>\n            <div className=\"item-listing-layout-sider-content-color-options\">\n                <Checkbox.Group value={filterColor} onChange={e => { onChange(e, 'color') }} >\n                    {colorOptions}\n                </Checkbox.Group>\n            </div>\n        </div>\n        <Divider />\n        <div className=\"item-listing-layout-sider-content-discount\" >\n            <text>\n                DISCOUNT RANGE\n                            </text>\n            <div className=\"item-listing-layout-sider-content-discount-options\">\n                <Checkbox.Group value={filterDiscount} onChange={e => { onChange(e, 'discount') }} >\n                    {discountOptions}\n                </Checkbox.Group>\n            </div>\n        </div>\n    </>;\n    const showDrawer = (event: React.MouseEvent<HTMLSpanElement, MouseEvent>, type: string): void => {\n        setDrawerType(type)\n        setVisible(true);\n    };\n\n    const onClose = (e?: React.KeyboardEvent<HTMLDivElement> | React.MouseEvent<HTMLDivElement | HTMLButtonElement>): void => {\n        setVisible(false);\n    };\n\n    const handleChange = (value: valueType): void => {\n        console.log(value)\n        if (sortBy === value) {\n            return\n        }\n        setSortBy(value)\n        if (drawerType === 'sort') {\n            onClose();\n        }\n    }\n\n    const sortOptions: JSX.Element = <>\n        <text>\n            SORT BY :\n        </text>\n        <Select value={sortBy} style={{ width: 200 }} onChange={handleChange}>\n            {\n                SORT_OPTIONS.map((item, index) => {\n                    return <Select.Option value={index}>{item}</Select.Option>\n                })\n            }\n        </Select>\n    </>\n\n    const drawerHeader: JSX.Element | string = drawerType === 'sort' ? \"SORT BY\" : filterHeader\n    const drawerContent: JSX.Element =\n        drawerType === 'sort' ?\n            <List\n                bordered\n                dataSource={SORT_OPTIONS}\n                renderItem={(item, index) => (\n                    <List.Item onClick={e => { handleChange(index) }}>\n                        {item}\n                        {sortBy === index &&\n                            <div style={{\n                                float: \"right\",\n                                textAlign: 'right'\n                            }}>\n                                <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                            </div>\n                        }\n                    </List.Item>\n                )}\n            />\n            :\n            <div className=\"item-listing-layout-sider-content\" style={{ padding: '10px 20px' }}>\n                {filterOptions}\n            </div>\n\n    return (\n        <div className=\"item-listing\">\n            <div className=\"item-listing-breadcrumb\" >\n                <NavBreadcrumb />\n            </div>\n            <Layout className=\"item-listing-layout\">\n                <Layout.Sider className=\"item-listing-layout-sider\" width={'15rem'}>\n                    <div className=\"item-listing-layout-sider-content\" style={{ padding: '10px 20px' }}>\n                        {filterHeader}\n                        <Divider />\n                        {filterOptions}\n                    </div>\n                </Layout.Sider>\n                <Layout.Content className=\"item-listing-layout-content\">\n                    <div className=\"item-listing-layout-content-main\">\n                        <PageHeader\n                            className=\"item-listing-layout-content-main-header\"\n                            title={category}\n                            extra={[sortOptions]}\n                        />\n\n                        <div className=\"item-listing-layout-content-main-items\">\n                            <Row style={{ margin: 0 }} gutter={24}>\n                                {/* {tempData.map(item => {\n                                    return <Col xs={12} sm={12} md={8} lg={8} xl={6} xxl={4} >\n                                        <CustomCard\n                                            type={'item-preview'}\n                                            param={item.id}\n                                            handleClick={handleClick}\n                                            onClickStar={handleClickStar}\n                                            hoverable={true}\n                                            styleName=\"preview-card\"\n                                            imageUrl={item.imageUrl}\n                                            title={item.title}\n                                            price={item.price}\n                                            stared={item.stared}\n                                            description={item.description} />\n                                    </Col>\n                                })} */}\n                                {allitemIds.getAllItemIdsBySubCategory.itemIds.map(item => {\n                                    return <Col xs={12} sm={12} md={8} lg={8} xl={6} xxl={4} >\n                                        <ItemView itemId={item} category={category} />\n                                    </Col>\n                                })}\n                            </Row>\n                        </div>\n\n                    </div>\n\n                    <Affix className=\"item-listing-layout-content-footer\" offsetBottom={0} >\n                        <button className=\"item-listing-layout-content-footer-content\" onClick={e => { showDrawer(e, \"sort\") }} >\n                            SORT\n                        </button>\n                        <button className=\"item-listing-layout-content-footer-content\" onClick={e => { showDrawer(e, \"filter\") }}>\n                            FILTER\n                        </button>\n                    </Affix>\n                </Layout.Content>\n            </Layout>\n            <Drawer\n                title={drawerHeader}\n                placement={drawerType === 'sort' ? \"bottom\" : \"right\"}\n                closable={false}\n                onClose={onClose}\n                visible={isVisible}\n                bodyStyle={{ padding: 0 }}\n                headerStyle={{ background: \"lightblue\" }}\n                height={300}\n            >\n                {drawerContent}\n            </Drawer>\n        </div>\n    );\n}",["146","147"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/types/cart.ts",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/Breadcrumb/Breadcrumb.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/generated/graphql.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/util/index.ts",[],["148","149"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Home/Home.tsx",["150","151","152","153"],"import React, { useEffect, useState } from 'react';\nimport \"./index.scss\";\nimport { Carousel, Col, Divider, Row } from 'antd';\nimport { CustomCard } from '../../components/CustomCard/CustomCard';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { url } from 'inspector';\nimport { OffersItem, useGetAllSubCategoriesWithCategoryQuery, useGetLAtestOffersQuery } from 'src/generated/graphql';\ninterface HomeProps {\n\n}\n\nconst tempData = [\n    { cateogry: \"Jeans\", imageUrl: \"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\", title: \"Jeans\" },\n    { cateogry: \"jeans-1\", imageUrl: \"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\", title: \"jeans-1\" },\n    { cateogry: \"jeans-2\", imageUrl: \"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\", title: \"jeans-2\" },\n    { cateogry: \"jeans-3\", imageUrl: \"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\", title: \"jeans-3\" },\n    { cateogry: \"jeans-4\", imageUrl: \"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\", title: \"jeans-4\" },\n    { cateogry: \"jeans-5\", imageUrl: \"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\", title: \"jeans-5\" },\n    { cateogry: \"jeans-6\", imageUrl: \"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\", title: \"jeans-6\" },\n    { cateogry: \"jeans-7\", imageUrl: \"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\", title: \"jeans-7\" },\n    { cateogry: \"jeans-8\", imageUrl: \"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\", title: \"jeans-8\" },\n    { cateogry: \"jeans-9\", imageUrl: \"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\", title: \"jeans-9\" },\n    { cateogry: \"jeans-10\", imageUrl: \"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\", title: \"jeans-10\" },\n    { cateogry: \"jeans-11\", imageUrl: \"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\", title: \"jeans-11\" }\n]\n\nexport const Home: React.FC<HomeProps & RouteComponentProps> = ({ history }) => {\n    const { data: offers, loading: offerLoading } = useGetLAtestOffersQuery();\n    const { data: categoryData, loading: categoryLoading } = useGetAllSubCategoriesWithCategoryQuery();\n    const handleClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>, category: string): void => {\n        history.push({ pathname: `./items/${category}` })\n    }\n\n    return (\n        <div className=\"homepage\">\n            <Carousel className=\"homepage-carousel\" >\n                {offerLoading ?\n                    <div>Loading</div>\n                    :\n                    offers?.getLatestOffers.offers.map(item => {\n                        return <div key={item.offerId} className=\"homepage-carousel-item\">\n                            <img src={`${item.image}`} alt={item.title} />\n                        </div>\n                    })\n                }\n\n            </Carousel>\n            <div className=\"homepage-item-brands\">\n                <h1>BIGGEST DEALS ON TOP BRANDS</h1>\n                <div className=\"homepage-item-brands-container\" >\n                    <Row gutter={24} >\n                        {tempData.map(item => {\n                            return <Col key={item.title} xs={12} sm={12} md={8} lg={8} xl={6} xxl={4} >\n                                <CustomCard\n                                    param={item.cateogry}\n                                    handleClick={handleClick}\n                                    hoverable={true}\n                                    styleName=\"cart-category-square\"\n                                    imageUrl={item.imageUrl}\n                                    title={item.title} />\n                            </Col>\n                        })}\n                    </Row>\n                </div>\n            </div>\n            <Divider className=\"homepage-divider\" dashed />\n            <div className=\"homepage-item-categories\">\n                <h1>CATEGORIES TO BAG</h1>\n                <div className=\"homepage-item-categories-container\">\n                    <Row gutter={24} style={{ margin: \"0\" }}>\n                        {categoryLoading ?\n                            <>\n                                loading categories\n                            </>\n                            :\n                            <>\n                                {(categoryData && categoryData.getAllSubCategoriesWithCategory) ?\n                                    categoryData.getAllSubCategoriesWithCategory.map(item => {\n                                        return <Col key={item.subCategory} xs={12} sm={12} md={8} lg={6} xl={4} >\n                                            <CustomCard\n                                                param={item.subCategory}\n                                                handleClick={handleClick}\n                                                hoverable={false}\n                                                styleName=\"cart-category-round\"\n                                                imageUrl={\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\"}\n                                                title={item.subCategory} />\n                                        </Col>\n                                    })\n                                    :\n                                    null\n                                }\n                            </>\n                        }\n                    </Row>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n    //  tempData.map(item => {\n                            //     return <Col key={item.title} xs={12} sm={12} md={8} lg={6} xl={4} >\n                            //         <CustomCard\n                            //             param={item.cateogry}\n                            //             handleClick={handleClick}\n                            //             hoverable={false}\n                            //             styleName=\"cart-category-round\"\n                            //             imageUrl={item.imageUrl}\n                            //             title={item.title} />\n                            //     </Col>\n                            // })",["154","155"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/ItemDetails.tsx",["156","157"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/CustomCard/CustomCard.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/ItemView/ItemView.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/ListView/ListView.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/accessToken.ts",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Login/Login.tsx",["158"],"import React, { useEffect } from 'react'\nimport { RouteComponentProps } from 'react-router-dom';\nimport { getAccessToken, setAccessToken } from 'src/accessToken';\nimport { useLoginUserMutation, UserDetailsDocument, UserDetailsQuery } from 'src/generated/graphql';\nimport { Form, Input, Button, Card } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport './index.scss';\n\ninterface loginFormProps {\n    email: string;\n    password: string;\n}\n\nexport const Login: React.FC<RouteComponentProps> = ({ history }) => {\n\n    // check for access token in loacl storage\n    useEffect(() => {\n        const accessToken = getAccessToken();\n        if (accessToken !== '') {\n            history.replace('./');\n        }\n    }, [])\n\n    // mutation for login\n    const [login] = useLoginUserMutation();\n\n    const [form] = Form.useForm();\n\n    // use mutation to check email and password is valid or not (use update to update you apollo clien cache)\n    // if yes set refresh token otherwise show error\n    const onFinish = (values: loginFormProps) => {\n        return login({\n            variables: {\n                email: values.email,\n                password: values.password\n            },\n            update: (store, { data }) => {\n                if (data && data.loginUser.__typename === \"LoginSuccess\") {\n                    store.writeQuery<UserDetailsQuery>({\n                        query: UserDetailsDocument,\n                        data: {\n                            __typename: \"Query\",\n                            getUserDetails: data.loginUser.user\n                        }\n                    })\n                } else {\n                    console.log('unbale to update user cache')\n                }\n            }\n        }).then(res => {\n            if (!res || res.errors || !res.data) {\n                return\n            }\n            if (res.data.loginUser.__typename === \"LoginSuccess\") {\n                //set access token \n                //access token used for protect graphql query/mutations\n                setAccessToken(res.data.loginUser.accessToken);\n\n                //navigate to home\n                history.push(\"/\");\n            }\n            else if (res.data.loginUser.__typename.endsWith(\"Error\")) {\n                // based on error code(1 for email and 2 for password) handle erros\n                // OR can use __typename to handle errors\n                if (res.data.loginUser.errorCode === \"1\") {\n                    return form.setFields([{ name: \"email\", errors: [\"Email not exists!\"] }])\n                }\n                return form.setFields([{ name: \"password\", errors: [\"Password not matched!\"] }])\n            }\n        }).catch(err => {\n            console.log('err', err)\n        })\n\n    }\n\n\n    const signUp = (event: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n        history.push(\"/register\");\n    }\n\n    return (\n        <div className=\"login\">\n            <Card className=\"login-card\">\n                <Form\n                    form={form}\n                    name=\"normal_login\"\n                    className=\"login-form\"\n                    initialValues={{ email: '', password: '' }}\n                    onFinish={onFinish}\n                >\n                    <Form.Item\n                        name=\"email\"\n                        rules={[{ type: 'email', required: true, message: 'Please input your Email!' }]}\n                    >\n                        <Input placeholder=\"Email\" prefix={<UserOutlined className=\"site-form-item-icon\" />} />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Please input your Password!' }]}\n                    >\n                        <Input\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                            Log in\n                        </Button>\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"dashed\" className=\"login-form-button\" onClick={signUp}>\n                            Sign up\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </div>\n    );\n} ","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/reducers/cartReducer.ts",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Cart/Cart.tsx",["159"],"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from 'src/redux/reducers';\nimport { CartState } from 'src/redux/types/cart';\nimport { addItem } from 'src/redux/actions/carts';\n\ninterface CartProps {\n\n}\n\nexport const Cart: React.FC<CartProps> = ({ }) => {\n    const items = useSelector<RootState, CartState['items']>(\n        (state) => state.cart.items\n    );\n    console.log(items)\n    const dispatch = useDispatch();\n    const addNewItem = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        let item = {\n            id: \"123\",\n            name: 'new',\n            quantity: 2,\n            price: 100,\n            timestamp: 3\n        }\n        dispatch(addItem(item))\n    }\n    return (\n        <div>\n            cart details\n            {items.map(item => {\n                return <p>{item.id}</p>\n            })}\n\n            <button onClick={e => addNewItem(e)}>add new</button>\n        </div>\n    );\n}","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/constants/AppConstanat.ts",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/Items.tsx",["160","161","162","163"],{"ruleId":"164","severity":1,"message":"165","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":26},{"ruleId":"168","severity":1,"message":"169","line":155,"column":33,"nodeType":"170","endLine":155,"endColumn":100},{"ruleId":"168","severity":1,"message":"169","line":162,"column":33,"nodeType":"170","endLine":162,"endColumn":100},{"ruleId":"168","severity":1,"message":"169","line":169,"column":33,"nodeType":"170","endLine":169,"endColumn":100},{"ruleId":"164","severity":1,"message":"171","line":1,"column":88,"nodeType":"166","messageId":"167","endLine":1,"endColumn":92},{"ruleId":"172","severity":1,"message":"173","line":49,"column":59,"nodeType":"174","messageId":"175","endLine":49,"endColumn":62},{"ruleId":"164","severity":1,"message":"176","line":50,"column":24,"nodeType":"166","messageId":"167","endLine":50,"endColumn":37},{"ruleId":"164","severity":1,"message":"177","line":71,"column":11,"nodeType":"166","messageId":"167","endLine":71,"endColumn":21},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"164","severity":1,"message":"165","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":26},{"ruleId":"164","severity":1,"message":"182","line":2,"column":36,"nodeType":"166","messageId":"167","endLine":2,"endColumn":43},{"ruleId":"178","replacedBy":"183"},{"ruleId":"180","replacedBy":"184"},{"ruleId":"164","severity":1,"message":"171","line":1,"column":88,"nodeType":"166","messageId":"167","endLine":1,"endColumn":92},{"ruleId":"164","severity":1,"message":"165","line":3,"column":17,"nodeType":"166","messageId":"167","endLine":3,"endColumn":26},{"ruleId":"164","severity":1,"message":"185","line":8,"column":10,"nodeType":"166","messageId":"167","endLine":8,"endColumn":20},{"ruleId":"164","severity":1,"message":"186","line":13,"column":46,"nodeType":"166","messageId":"167","endLine":13,"endColumn":72},{"ruleId":"164","severity":1,"message":"187","line":20,"column":11,"nodeType":"166","messageId":"167","endLine":20,"endColumn":20},{"ruleId":"172","severity":1,"message":"173","line":29,"column":59,"nodeType":"174","messageId":"175","endLine":29,"endColumn":62},{"ruleId":"164","severity":1,"message":"188","line":41,"column":9,"nodeType":"166","messageId":"167","endLine":41,"endColumn":22},{"ruleId":"178","replacedBy":"189"},{"ruleId":"180","replacedBy":"190"},{"ruleId":"178","replacedBy":"191"},{"ruleId":"180","replacedBy":"192"},{"ruleId":"164","severity":1,"message":"165","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":26},{"ruleId":"164","severity":1,"message":"193","line":1,"column":28,"nodeType":"166","messageId":"167","endLine":1,"endColumn":36},{"ruleId":"164","severity":1,"message":"194","line":6,"column":10,"nodeType":"166","messageId":"167","endLine":6,"endColumn":13},{"ruleId":"164","severity":1,"message":"195","line":7,"column":10,"nodeType":"166","messageId":"167","endLine":7,"endColumn":20},{"ruleId":"178","replacedBy":"196"},{"ruleId":"180","replacedBy":"197"},{"ruleId":"164","severity":1,"message":"198","line":1,"column":79,"nodeType":"166","messageId":"167","endLine":1,"endColumn":84},{"ruleId":"164","severity":1,"message":"199","line":12,"column":7,"nodeType":"166","messageId":"167","endLine":12,"endColumn":16},{"ruleId":"200","severity":1,"message":"201","line":22,"column":8,"nodeType":"202","endLine":22,"endColumn":10,"suggestions":"203"},{"ruleId":"172","severity":1,"message":"173","line":11,"column":43,"nodeType":"174","messageId":"175","endLine":11,"endColumn":46},{"ruleId":"164","severity":1,"message":"165","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":26},{"ruleId":"164","severity":1,"message":"193","line":1,"column":28,"nodeType":"166","messageId":"167","endLine":1,"endColumn":36},{"ruleId":"172","severity":1,"message":"173","line":11,"column":45,"nodeType":"174","messageId":"175","endLine":11,"endColumn":48},{"ruleId":"164","severity":1,"message":"204","line":12,"column":19,"nodeType":"166","messageId":"167","endLine":12,"endColumn":22},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Card' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'setIsFetching' is assigned a value but never used.","'id' is assigned a value but never used.","no-native-reassign",["205"],"no-negated-in-lhs",["206"],"'message' is defined but never used.",["205"],["206"],"'CustomCard' is defined but never used.","'useGetItemDetailsByIdQuery' is defined but never used.","'ITempData' is defined but never used.","'fillterOption' is assigned a value but never used.",["205"],["206"],["205"],["206"],"'useState' is defined but never used.","'url' is defined but never used.","'OffersItem' is defined but never used.",["205"],["206"],"'Image' is defined but never used.","'tempData2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["207"],"'url' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},"Update the dependencies array to be: [history]",{"range":"210","text":"211"},[746,748],"[history]"]