[{"/home/divum/prahlad-projects/learning/JWT/client/src/App.tsx":"1","/home/divum/prahlad-projects/learning/JWT/client/src/redux/reducers/index.ts":"2","/home/divum/prahlad-projects/learning/JWT/client/src/pages/Header/Header.tsx":"3","/home/divum/prahlad-projects/learning/JWT/client/src/redux/actions/carts.ts":"4","/home/divum/prahlad-projects/learning/JWT/client/src/pages/Items/ItemsList.tsx":"5","/home/divum/prahlad-projects/learning/JWT/client/src/redux/types/cart.ts":"6","/home/divum/prahlad-projects/learning/JWT/client/src/components/Breadcrumb/Breadcrumb.tsx":"7","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/index.tsx":"8","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/App.tsx":"9","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/reducers/index.ts":"10","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Header/Header.tsx":"11","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/actions/carts.ts":"12","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/ItemsList.tsx":"13","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/types/cart.ts":"14","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/Breadcrumb/Breadcrumb.tsx":"15","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/generated/graphql.tsx":"16","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/util/index.ts":"17","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Home/Home.tsx":"18","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/ItemDetails.tsx":"19","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/CustomCard/CustomCard.tsx":"20","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/ItemView/ItemView.tsx":"21","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/ListView/ListView.tsx":"22","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/accessToken.ts":"23","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Login/Login.tsx":"24","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/reducers/cartReducer.ts":"25","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Cart/Cart.tsx":"26","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/constants/AppConstanat.ts":"27","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/Items.tsx":"28","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Register/Register.tsx":"29","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/store/index.tsx":"30","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/ALlitem.tsx":"31","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Bye.tsx":"32","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/CartItemView/CartItemView.tsx":"33"},{"size":748,"mtime":1613900838000,"results":"34","hashOfConfig":"35"},{"size":211,"mtime":1612121200000,"results":"36","hashOfConfig":"35"},{"size":10748,"mtime":1613337895000,"results":"37","hashOfConfig":"35"},{"size":499,"mtime":1612120493000,"results":"38","hashOfConfig":"35"},{"size":18977,"mtime":1613513635000,"results":"39","hashOfConfig":"35"},{"size":488,"mtime":1612096562000,"results":"40","hashOfConfig":"35"},{"size":1523,"mtime":1613332721000,"results":"41","hashOfConfig":"35"},{"size":2584,"mtime":1613316576000,"results":"42","hashOfConfig":"43"},{"size":748,"mtime":1613900838000,"results":"44","hashOfConfig":"43"},{"size":211,"mtime":1612121200000,"results":"45","hashOfConfig":"43"},{"size":10431,"mtime":1617046853770,"results":"46","hashOfConfig":"43"},{"size":499,"mtime":1612120493000,"results":"47","hashOfConfig":"43"},{"size":11386,"mtime":1617038212081,"results":"48","hashOfConfig":"43"},{"size":488,"mtime":1612096562000,"results":"49","hashOfConfig":"43"},{"size":1523,"mtime":1613332721000,"results":"50","hashOfConfig":"43"},{"size":59646,"mtime":1616794438629,"results":"51","hashOfConfig":"43"},{"size":451,"mtime":1613335410000,"results":"52","hashOfConfig":"43"},{"size":5400,"mtime":1617045854144,"results":"53","hashOfConfig":"43"},{"size":13763,"mtime":1617038330601,"results":"54","hashOfConfig":"43"},{"size":2457,"mtime":1616957726309,"results":"55","hashOfConfig":"43"},{"size":2563,"mtime":1616274649449,"results":"56","hashOfConfig":"43"},{"size":3069,"mtime":1616939547435,"results":"57","hashOfConfig":"43"},{"size":292,"mtime":1612090362000,"results":"58","hashOfConfig":"43"},{"size":4569,"mtime":1613898667000,"results":"59","hashOfConfig":"43"},{"size":630,"mtime":1612121416000,"results":"60","hashOfConfig":"43"},{"size":6644,"mtime":1616961878889,"results":"61","hashOfConfig":"43"},{"size":2309,"mtime":1617038118490,"results":"62","hashOfConfig":"43"},{"size":736,"mtime":1613228112000,"results":"63","hashOfConfig":"43"},{"size":5591,"mtime":1613898709000,"results":"64","hashOfConfig":"43"},{"size":227,"mtime":1612119901000,"results":"65","hashOfConfig":"43"},{"size":1234,"mtime":1616794641118,"results":"66","hashOfConfig":"43"},{"size":519,"mtime":1611479125000,"results":"67","hashOfConfig":"43"},{"size":12530,"mtime":1616532278050,"results":"68","hashOfConfig":"43"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v5wfed",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d56lih",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"119"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"119"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"119"},"/home/divum/prahlad-projects/learning/JWT/client/src/App.tsx",[],"/home/divum/prahlad-projects/learning/JWT/client/src/redux/reducers/index.ts",[],"/home/divum/prahlad-projects/learning/JWT/client/src/pages/Header/Header.tsx",["148","149","150","151"],"/home/divum/prahlad-projects/learning/JWT/client/src/redux/actions/carts.ts",[],"/home/divum/prahlad-projects/learning/JWT/client/src/pages/Items/ItemsList.tsx",["152","153","154","155"],"/home/divum/prahlad-projects/learning/JWT/client/src/redux/types/cart.ts",[],"/home/divum/prahlad-projects/learning/JWT/client/src/components/Breadcrumb/Breadcrumb.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/index.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/App.tsx",[],["156","157"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/reducers/index.ts",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Header/Header.tsx",["158","159"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/actions/carts.ts",[],["160","161"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/ItemsList.tsx",["162"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/types/cart.ts",[],["163","164"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/Breadcrumb/Breadcrumb.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/generated/graphql.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/util/index.ts",[],["165","166"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Home/Home.tsx",["167","168"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/ItemDetails.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/CustomCard/CustomCard.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/ItemView/ItemView.tsx",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/ListView/ListView.tsx",["169","170"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/accessToken.ts",[],["171","172"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Login/Login.tsx",["173"],"import React, { useEffect } from 'react'\nimport { RouteComponentProps } from 'react-router-dom';\nimport { getAccessToken, setAccessToken } from 'src/accessToken';\nimport { useLoginUserMutation, UserDetailsDocument, UserDetailsQuery } from 'src/generated/graphql';\nimport { Form, Input, Button, Card } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport './index.scss';\n\ninterface loginFormProps {\n    email: string;\n    password: string;\n}\n\nexport const Login: React.FC<RouteComponentProps> = ({ history }) => {\n\n    // check for access token in loacl storage\n    useEffect(() => {\n        const accessToken = getAccessToken();\n        if (accessToken !== '') {\n            history.replace('./');\n        }\n    }, [])\n\n    // mutation for login\n    const [login] = useLoginUserMutation();\n\n    const [form] = Form.useForm();\n\n    // use mutation to check email and password is valid or not (use update to update you apollo clien cache)\n    // if yes set refresh token otherwise show error\n    const onFinish = (values: loginFormProps) => {\n        return login({\n            variables: {\n                email: values.email,\n                password: values.password\n            },\n            update: (store, { data }) => {\n                if (data && data.loginUser.__typename === \"LoginSuccess\") {\n                    store.writeQuery<UserDetailsQuery>({\n                        query: UserDetailsDocument,\n                        data: {\n                            __typename: \"Query\",\n                            getUserDetails: data.loginUser.user\n                        }\n                    })\n                } else {\n                    console.log('unbale to update user cache')\n                }\n            }\n        }).then(res => {\n            if (!res || res.errors || !res.data) {\n                return\n            }\n            if (res.data.loginUser.__typename === \"LoginSuccess\") {\n                //set access token \n                //access token used for protect graphql query/mutations\n                setAccessToken(res.data.loginUser.accessToken);\n\n                //navigate to home\n                history.push(\"/\");\n            }\n            else if (res.data.loginUser.__typename.endsWith(\"Error\")) {\n                // based on error code(1 for email and 2 for password) handle erros\n                // OR can use __typename to handle errors\n                if (res.data.loginUser.errorCode === \"1\") {\n                    return form.setFields([{ name: \"email\", errors: [\"Email not exists!\"] }])\n                }\n                return form.setFields([{ name: \"password\", errors: [\"Password not matched!\"] }])\n            }\n        }).catch(err => {\n            console.log('err', err)\n        })\n\n    }\n\n\n    const signUp = (event: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n        history.push(\"/register\");\n    }\n\n    return (\n        <div className=\"login\">\n            <Card className=\"login-card\">\n                <Form\n                    form={form}\n                    name=\"normal_login\"\n                    className=\"login-form\"\n                    initialValues={{ email: '', password: '' }}\n                    onFinish={onFinish}\n                >\n                    <Form.Item\n                        name=\"email\"\n                        rules={[{ type: 'email', required: true, message: 'Please input your Email!' }]}\n                    >\n                        <Input placeholder=\"Email\" prefix={<UserOutlined className=\"site-form-item-icon\" />} />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Please input your Password!' }]}\n                    >\n                        <Input\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                            Log in\n                        </Button>\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"dashed\" className=\"login-form-button\" onClick={signUp}>\n                            Sign up\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </div>\n    );\n} ","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/reducers/cartReducer.ts",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Cart/Cart.tsx",["174"],"import { Button, Card, Col, Divider, Row, Skeleton, Empty } from 'antd';\nimport React from 'react';\nimport { CartItemView } from 'src/components/CartItemView/CartItemView';\nimport { useGetCartDetailsQuery } from 'src/generated/graphql';\nimport './index.scss';\ninterface CartProps {\n\n}\n\nexport const Cart: React.FC<CartProps> = ({ }) => {\n    const { data: cartData, loading, error } = useGetCartDetailsQuery({ fetchPolicy: 'network-only' });\n\n    if (error) {\n        //navigate to home\n        console.log(error);\n    }\n\n    console.log(cartData);\n    if (loading || !cartData?.getCartDetails) {\n        return <Skeleton />\n    }\n\n    let priceDetails = cartData.getCartDetails.items.reduce(function (accumulator, currentValue) {\n        return {\n            price: Number(accumulator.price) + (Number(currentValue.price) * Number(currentValue.quantity)),\n            priceWithoutDiscount: Number(accumulator.priceWithoutDiscount) + Math.ceil((((Number(currentValue.discount) + 100) * Number(currentValue.price)) * .01) * Number(currentValue.quantity)),\n        }\n    }, { price: 0, priceWithoutDiscount: 0 });\n\n    let totalPayable = priceDetails.price;\n\n    if (priceDetails.price < 500 && cartData.getCartDetails.items.length > 0) {\n        totalPayable += 50;\n    }\n\n    return (\n        <div className=\"cart\">\n            <Row gutter={24}>\n                <Col xs={{ span: 24, offset: 0 }} sm={{ span: 24, offset: 0 }} md={{ span: 24, offset: 0 }} lg={{ span: 16, offset: 0 }} xl={{ span: 16, offset: 0 }} xxl={{ span: 16, offset: 0 }} >\n                    {\n                        cartData.getCartDetails.count === 0 ?\n                            <Card bordered className=\"cart-empty\">\n                                <Empty description={<p>No item found in cart, Please add items to cart.</p>} image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                            </Card>\n                            :\n                            cartData.getCartDetails.items.map((ele, index) => {\n                                return <CartItemView cartId={cartData.getCartDetails.cartId} itemId={ele.itemId} size={ele.size} quantity={ele.quantity} />\n                            })\n                    }\n                </Col>\n                <Col xs={{ span: 24, offset: 0 }} sm={{ span: 24, offset: 0 }} md={{ span: 24, offset: 0 }} lg={{ span: 8, offset: 0 }} xl={{ span: 8, offset: 0 }} xxl={{ span: 8, offset: 0 }}>\n                    <Card\n                        className=\"cart-info\"\n                        style={{ marginTop: 16 }}\n                    >\n                        <div className='cart-info-content'>\n                            <h3>\n                                PRICE DETAILS ({cartData.getCartDetails.count} Items)\n                            </h3>\n                            <Divider />\n                            <div className=\"cart-info-content-priceDetails\">\n                                <p>\n                                    <span className=\"cart-info-content-priceDetails-left\">\n                                        Total MRP\n                                  </span>\n                                    <span className=\"cart-info-content-priceDetails-right\">\n                                        &#8377; {priceDetails.priceWithoutDiscount}\n                                    </span>\n                                </p>\n                                <p>\n                                    <span className=\"cart-info-content-priceDetails-left\">\n                                        Dicount on MRP\n                                  </span>\n                                    <span className=\"cart-info-content-priceDetails-right color-green\">\n                                        - &#8377; {priceDetails.priceWithoutDiscount - priceDetails.price}\n                                    </span>\n                                </p>\n                                <p>\n                                    <span className=\"cart-info-content-priceDetails-left\">\n                                        Coupon Discount\n                                  </span>\n                                    <span className=\"cart-info-content-priceDetails-right\">\n                                        &#8377; 0\n                                  </span>\n                                </p>\n                                {\n                                    cartData.getCartDetails.items.length > 0 &&\n                                    <p>\n                                        <span className=\"cart-info-content-priceDetails-left\">\n                                            Conevnience Fee\n                                        </span>\n                                        <span className=\"cart-info-content-priceDetails-right\">\n                                            {priceDetails.price >= 500 ?\n                                                <>\n                                                    <span className=\"cart-info-content-priceDetails-right-line\">\n                                                        <span>&#8377; 50</span>\n                                                    </span>\n                                                    <span className=\"color-green\">\n                                                        FREE\n                                             </span>\n                                                </>\n                                                :\n                                                <span>&#8377; 50</span>}\n                                        </span>\n                                    </p>\n\n                                }\n                            </div>\n                            <Divider />\n                            <div className=\"cart-info-content-priceTotal\">\n                                <h3>\n                                    <span>\n                                        Total Amount\n                                    </span>\n                                    <span className=\"cart-info-content-priceTotal-right\">\n                                        &#8377; {totalPayable}\n                                    </span>\n                                </h3>\n                            </div>\n                        </div>\n                        <div className=\"cart-info-footer\">\n                            <Button disabled={totalPayable === 0 ? true : false} type=\"primary\">\n                                Place Order\n                            </Button>\n                        </div>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n}","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/constants/AppConstanat.ts",[],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/Items.tsx",["175","176","177","178"],"import React, { useEffect, useState } from 'react';\nimport { Redirect, Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { ALlitem } from './ALlitem';\nimport { ItemDetails } from './ItemDetails';\nimport { ItemsList } from './ItemsList';\n\ninterface ItemsProps {\n\n}\n\nexport const Items: React.FC<ItemsProps> = ({ }) => {\n    const { path, url } = useRouteMatch();\n    return (\n        <Switch>\n            <Route exact path={`${path}/default`} component={ALlitem} />\n            <Route exact path={`${path}/:category/:id`} component={ItemDetails} />\n            <Route exact path={`${path}/:category`} component={ItemsList} />\n            <Redirect exact from={`${path}/`} to={`${path}/default`} />\n        </Switch>\n    );\n}","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Register/Register.tsx",["179","180"],"import React, { useEffect, useState } from 'react'\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useRegisterUserMutation } from 'src/generated/graphql';\nimport './index.scss';\nimport { Form, Input, Button, Card, message } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { getAccessToken } from 'src/accessToken';\n\n\ninterface RegisterFormProps {\n    email: string,\n    password: string,\n    firstName: string,\n    lastName: string,\n    passwordConfirm: string\n}\n\nexport const Register: React.FC<RouteComponentProps> = ({ history }) => {\n\n    // check for access token in loacl storage\n    // if user has accesstoken, redirect user to home otherwise load the component\n    useEffect(() => {\n        const accessToken = getAccessToken();\n        if (accessToken && accessToken !== '') {\n            history.replace('./');\n        }\n    }, [])\n\n    // mutation to register a user  \n    const [registerUser] = useRegisterUserMutation()\n\n\n    const [form] = Form.useForm()\n\n    // basic validation and call muatation\n    const onFinish = (values: RegisterFormProps) => {\n        if (values.password !== values.passwordConfirm) {\n            message.warn(\"Password doesn't match\")\n            return\n        }\n        return registerUser({\n            variables: {\n                email: values.email,\n                password: values.password,\n                firstName: values.firstName,\n                lastName: values.lastName\n            }\n        }).then(_res => {\n            console.log(_res)\n            if (_res.data?.registerUser.__typename === \"RegisterSuccess\") {\n                // navigate to login\n                history.push(\"/login\");\n            }\n            else if (_res.data?.registerUser.__typename === \"AllreadyExistsError\") {\n                form.setFields([{ name: \"email\", errors: [\"Email alredy exists!\"] }])\n            }\n            else {\n                //handle other errors (based on error code)\n                console.log(_res.data?.registerUser)\n                message.warning('Something went worng')\n            }\n        })\n    };\n\n    // navigate to login\n    const logIn = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        history.push(\"/login\");\n    }\n\n    // custom validator for confirm passwod\n    const confrimPassword = (rule: any, value: any, callback: (error?: string) => void): Promise<void | any> | void => {\n        let { password } = form.getFieldsValue()\n        if (!value || value === password) {\n            callback();\n        }\n        else {\n            callback(\"Password doesn't match!\");\n        }\n    }\n\n    return (\n        <div className=\"register\">\n            <Card className=\"register-card\">\n                <Form\n                    form={form}\n                    name=\"normal_register\"\n                    className=\"register-form\"\n                    initialValues={{ firstName: '', lastName: '', email: '', password: '', passwordConfirm: '' }}\n                    onFinish={onFinish}\n                >\n                    <Form.Item\n                        name=\"firstName\"\n                        rules={[{ type: 'string', required: true, message: 'Please input your First Name!' }]}\n                    >\n                        <Input placeholder=\"First Name\" prefix={<UserOutlined className=\"site-form-item-icon\" />} />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"lastName\"\n                        rules={[{ type: 'string', required: true, message: 'Please input your Last Name!' }]}\n                    >\n                        <Input placeholder=\"Last Name\" prefix={<UserOutlined className=\"site-form-item-icon\" />} />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"email\"\n                        rules={[{ type: 'email', required: true, message: 'Please input your Email!' }]}\n                    >\n                        <Input placeholder=\"Email\" prefix={<UserOutlined className=\"site-form-item-icon\" />} />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Please input your Password!' }]}\n                    >\n                        <Input\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"passwordConfirm\"\n                        rules={[{ required: true, message: \"Please confrim your Password!\" }, { validator: confrimPassword }]}\n                    >\n                        <Input\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            type=\"password\"\n                            placeholder=\"Confirm Password\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"register-form-button\">\n                            Sign up\n                        </Button>\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"dashed\" className=\"register-form-button\" onClick={logIn}>\n                            Log in\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </div>\n    );\n\n}; ",["181","182"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/redux/store/index.tsx",[],["183","184"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Items/ALlitem.tsx",["185","186"],"import { Divider } from 'antd';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { NavBreadcrumb } from 'src/components/Breadcrumb/Breadcrumb';\nimport { ListView } from 'src/components/ListView/ListView';\nimport { useAllSubCategoriesWithItemQuery } from 'src/generated/graphql';\n\ninterface ALlitemProps {\n\n}\n\n\nexport const ALlitem: React.FC<ALlitemProps> = ({ }) => {\n    const { data, loading, error } = useAllSubCategoriesWithItemQuery();\n    const history = useHistory();\n    if (error) {\n        history.push({ pathname: '/' });\n    }\n    if (loading || !data || !data.allSubCategoriesWithItem) {\n        return <div>Loading....</div>\n    }\n    return (\n        <div className=\"item-categories\">\n            <div className=\"item-categories-breadcrumb\">\n                <NavBreadcrumb />\n            </div>\n            <div className=\"item-categories-content\">\n                {\n                    data.allSubCategoriesWithItem.map(ele => {\n                        return <ListView\n                            itemIds={ele.itemIds}\n                            category={ele.subCategory}\n                        />\n                    })\n                }\n            </div>\n        </div >\n    );\n}","/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/pages/Bye.tsx",["187"],"/home/divum/prahlad-projects/learning/project/shopping-site-client-v2/src/components/CartItemView/CartItemView.tsx",["188"],"import { Card, Col, Row, Modal, Slider, Radio, RadioChangeEvent, Skeleton, message } from 'antd';\nimport React, { useState } from 'react';\nimport { useGetItemDetailsForCartQuery, useAdjustItemQyantityMutation, GetCartDetailsQuery, GetCartDetailsDocument, CartItem, useAdjustItemSizeMutation, useRemoveItemFromCartMutation } from 'src/generated/graphql';\n// import { SettingOutlined, EditOutlined } from '@ant-design/icons';\nimport './index.scss';\n\ninterface CartItemViewProps {\n    itemId: string;\n    quantity: number;\n    size: string;\n    cartId: string;\n}\n\nexport const CartItemView: React.FC<CartItemViewProps> = ({ itemId, quantity, size, cartId }) => {\n    const [visible, setVisible] = React.useState<boolean>(false);\n    const [confirmLoading, setConfirmLoading] = React.useState<boolean>(false);\n    const [modalType, setModalType] = React.useState<string>('');\n    const [selectedSize, setSelectedSize] = React.useState<string>(size);\n    const [selectedQuantity, setSelectedQuantity] = React.useState<number>(quantity);\n    const { data, loading, error } = useGetItemDetailsForCartQuery({ variables: { itemId } });\n    const [addjustItemQuantity] = useAdjustItemQyantityMutation();\n    const [addjustItemSize] = useAdjustItemSizeMutation();\n    const [removeItemFromCart] = useRemoveItemFromCartMutation();\n\n\n    if (data) {\n        console.log(data);\n    }\n    const handleCancel = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n        // setModalType('');\n        if (modalType === 'size') {\n            setSelectedSize(size);\n        }\n        else {\n            setSelectedQuantity(quantity);\n        }\n        setVisible(false);\n    };\n    const showModal = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>, type: string): void => {\n        event.preventDefault();\n        if (type === 'size') {\n            setSelectedSize(size);\n        } else {\n            setSelectedQuantity(quantity);\n        }\n        setModalType(type)\n        setVisible(true);\n    };\n\n    const onClickRemove = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n        event.preventDefault();\n        removeItemFromCart({\n            variables: {\n                cartId,\n                itemId\n            },\n            update: (store, { data }) => {\n                if (data && data.removeItemFromCart) {\n                    let cartData = store.readQuery<GetCartDetailsQuery>({\n                        query: GetCartDetailsDocument\n                    })\n                    if (cartData?.getCartDetails) {\n                        let items = cartData.getCartDetails.items.filter((x) => x.itemId !== data.removeItemFromCart);\n\n                        store.writeQuery<GetCartDetailsQuery>({\n                            query: GetCartDetailsDocument,\n                            data: {\n                                __typename: \"Query\",\n                                getCartDetails: { ...cartData.getCartDetails, items },\n                            }\n                        })\n                    } else {\n                        console.log('unbale to update cart cache')\n                    }\n                }\n            }\n        }).then(res => {\n            if (!res || res.errors || !res.data) {\n                message.error('Unable to remove Item from cart!');\n            }\n            else {\n                message.info('Item Removed!');\n            }\n        })\n    };\n\n    const handleOk = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n        setConfirmLoading(true);\n        if (modalType === 'quantity') {\n            addjustItemQuantity({\n                variables: {\n                    cartId,\n                    itemId,\n                    quantity: selectedQuantity\n                },\n                update: (store, { data }) => {\n                    if (data && data.adjustItemQyantity) {\n                        let cartData = store.readQuery<GetCartDetailsQuery>({\n                            query: GetCartDetailsDocument\n                        })\n                        if (cartData?.getCartDetails) {\n                            let cartDetails = JSON.parse(JSON.stringify(cartData.getCartDetails));\n                            let index: number = cartDetails.items.findIndex((x: CartItem) => x.itemId === itemId);\n                            cartDetails.items[index].quantity = data.adjustItemQyantity;\n                            store.writeQuery<GetCartDetailsQuery>({\n                                query: GetCartDetailsDocument,\n                                data: {\n                                    __typename: \"Query\",\n                                    getCartDetails: { ...cartDetails },\n                                }\n                            })\n                        } else {\n                            console.log('unbale to update cart cache')\n                        }\n                    }\n                }\n            }).then(res => {\n                if (!res || res.errors || !res.data) {\n                    message.error('Unable to adjust quantity');\n                } else {\n                    message.info('quantity updated');\n                }\n                setVisible(false);\n                setConfirmLoading(false);\n            })\n        }\n        else {\n            addjustItemSize({\n                variables: {\n                    cartId,\n                    itemId,\n                    size: selectedSize\n                }\n                ,\n                update: (store, { data }) => {\n                    if (data && data.adjustItemSize) {\n                        let cartData = store.readQuery<GetCartDetailsQuery>({\n                            query: GetCartDetailsDocument\n                        })\n                        if (cartData?.getCartDetails) {\n                            let cartDetails = JSON.parse(JSON.stringify(cartData.getCartDetails));\n                            let index: number = cartDetails.items.findIndex((x: CartItem) => x.itemId === itemId);\n                            cartDetails.items[index].size = data.adjustItemSize;\n                            store.writeQuery<GetCartDetailsQuery>({\n                                query: GetCartDetailsDocument,\n                                data: {\n                                    __typename: \"Query\",\n                                    getCartDetails: { ...cartDetails },\n                                }\n                            })\n                        } else {\n                            console.log('unbale to update cart cache')\n                        }\n                    }\n                }\n            }).then(res => {\n                if (!res || res.errors || !res.data) {\n                    message.error('Unable to adjust size');\n                } else {\n                    message.info('size updated');\n                }\n                setVisible(false);\n                setConfirmLoading(false);\n            })\n\n        }\n    };\n    const onChange = (e: RadioChangeEvent) => {\n        setSelectedSize(e.target.value);\n    }\n\n    const onChangeNumber = (value: number): void => {\n        setSelectedQuantity(value);\n    }\n    if (error) {\n        return <Skeleton />;\n    }\n    if (loading || !data || !data.getItemDetails) {\n        return <Skeleton />\n    }\n\n    const modalTitle: string = modalType === 'size' ? 'Select Size' : 'Select Quantity';\n\n\n    const modalContent: React.ReactNode = modalType === 'size' ?\n        <>\n            <Radio.Group value={selectedSize} onChange={onChange}>\n                {[{ name: 'S', quantity: 20 }, { name: 'M', quantity: 20 }, { name: 'L', quantity: 0 }, { name: 'XL', quantity: 20 }].map((item, index) => {\n                    return <Radio.Button disabled={item.quantity === 0 ? true : false} value={item.name}>{item.name}</Radio.Button>\n                })}\n            </Radio.Group>\n        </>\n        :\n        <div className=\"numberSlider\">\n            <span className=\"numberSlider-left\">\n                1\n            </span>\n            <Slider min={1} max={20} value={selectedQuantity} onChange={onChangeNumber} />\n            <span className=\"numberSlider-right\">\n                20\n            </span>\n        </div>\n        ;\n    const discount = data.getItemDetails.inventory.discount || 0;\n    const priceWithoutDiscount = Math.ceil((data.getItemDetails.inventory.price * (discount + 100)) / 100);\n    return (\n        <Card\n            className=\"cartItem\"\n            style={{ width: '100%', marginTop: 16 }}\n            actions={[\n                <button className=\"cartItem-button\" onClick={onClickRemove} >Remove</button>\n            ]}\n        >\n            <div className=\"cartItem-content\">\n                {/* gutter={24} */}\n                <Row wrap={false}>\n                    {/* xs={{ span: 8, offset: 0 }} sm={{ span: 8, offset: 0 }} md={{ span: 8, offset: 0 }} lg={{ span: 8, offset: 0 }} xl={{ span: 8, offset: 0 }} xxl={{ span: 6, offset: 0 }} */}\n                    <Col flex='none' >\n                        <img alt='sometext' src={data.getItemDetails.images[0]} />\n                    </Col>\n                    {/* xs={{ span: 16, offset: 0 }} sm={{ span: 16, offset: 0 }} md={{ span: 16, offset: 0 }} lg={{ span: 14, offset: 0 }} xl={{ span: 16, offset: 0 }} xxl={{ span: 18, offset: 0 }} */}\n                    <Col flex='auto'>\n                        <div className=\"cartItem-content-item\">\n                            <div className=\"cartItem-content-item-description\">\n                                <h3>\n                                    {data.getItemDetails.brand}\n                                </h3>\n                                <p className=\"cartItem-content-item-description-name\">\n                                    {data.getItemDetails.name}\n                                </p>\n                                <p className=\"cartItem-content-item-description-seller\">\n                                    Men Black Printed Round Neck T-shirt\n                                </p>\n                                <div className=\"cartItem-content-item-description-action\">\n                                    <p>\n                                        <span className=\"cartItem-content-item-description-action-button-title\">\n                                            Quantity :\n                                        </span>\n                                        <button onClick={e => { showModal(e, 'quantity') }}>\n                                            {selectedQuantity}\n                                        </button>\n                                    </p>\n                                    <p className=\"cartItem-content-item-description-action-button\">\n                                        <span className=\"cartItem-content-item-description-action-button-title\">\n                                            Size :\n                                        </span>\n                                        <button onClick={e => { showModal(e, 'size') }}>\n                                            {selectedSize}\n                                        </button>\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"cartItem-content-item-price\">\n                                <h3 className=\"cartItem-content-item-price-amount\">\n                                    &#8377; {data.getItemDetails.inventory.price}\n                                </h3>\n                                <p className=\"cartItem-content-item-price-discount\">\n                                    <span className=\"cartItem-content-item-price-discount-line\">\n                                        <span>&#8377; {priceWithoutDiscount}</span>\n                                    </span>\n                                    <span className=\"cartItem-content-item-price-discount-value\">\n                                        ~{discount}% OFF\n                                    </span>\n                                </p>\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n            <Modal\n                centered\n                title={modalTitle}\n                visible={visible}\n                onOk={handleOk}\n                confirmLoading={confirmLoading}\n                onCancel={handleCancel}\n            >\n                {modalContent}\n            </Modal>\n        </Card>\n    )\n}\n",{"ruleId":"189","severity":1,"message":"190","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"193","severity":1,"message":"194","line":155,"column":33,"nodeType":"195","endLine":155,"endColumn":100},{"ruleId":"193","severity":1,"message":"194","line":162,"column":33,"nodeType":"195","endLine":162,"endColumn":100},{"ruleId":"193","severity":1,"message":"194","line":169,"column":33,"nodeType":"195","endLine":169,"endColumn":100},{"ruleId":"189","severity":1,"message":"196","line":1,"column":88,"nodeType":"191","messageId":"192","endLine":1,"endColumn":92},{"ruleId":"197","severity":1,"message":"198","line":49,"column":59,"nodeType":"199","messageId":"200","endLine":49,"endColumn":62},{"ruleId":"189","severity":1,"message":"201","line":50,"column":24,"nodeType":"191","messageId":"192","endLine":50,"endColumn":37},{"ruleId":"189","severity":1,"message":"202","line":71,"column":11,"nodeType":"191","messageId":"192","endLine":71,"endColumn":21},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"189","severity":1,"message":"190","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"207","line":2,"column":36,"nodeType":"191","messageId":"192","endLine":2,"endColumn":43},{"ruleId":"203","replacedBy":"208"},{"ruleId":"205","replacedBy":"209"},{"ruleId":"197","severity":1,"message":"198","line":19,"column":59,"nodeType":"199","messageId":"200","endLine":19,"endColumn":62},{"ruleId":"203","replacedBy":"210"},{"ruleId":"205","replacedBy":"211"},{"ruleId":"203","replacedBy":"212"},{"ruleId":"205","replacedBy":"213"},{"ruleId":"189","severity":1,"message":"214","line":3,"column":25,"nodeType":"191","messageId":"192","endLine":3,"endColumn":32},{"ruleId":"189","severity":1,"message":"215","line":11,"column":7,"nodeType":"191","messageId":"192","endLine":11,"endColumn":15},{"ruleId":"189","severity":1,"message":"216","line":2,"column":20,"nodeType":"191","messageId":"192","endLine":2,"endColumn":24},{"ruleId":"189","severity":1,"message":"217","line":27,"column":11,"nodeType":"191","messageId":"192","endLine":27,"endColumn":30},{"ruleId":"203","replacedBy":"218"},{"ruleId":"205","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":22,"column":8,"nodeType":"222","endLine":22,"endColumn":10,"suggestions":"223"},{"ruleId":"197","severity":1,"message":"198","line":10,"column":43,"nodeType":"199","messageId":"200","endLine":10,"endColumn":46},{"ruleId":"189","severity":1,"message":"190","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"224","line":1,"column":28,"nodeType":"191","messageId":"192","endLine":1,"endColumn":36},{"ruleId":"197","severity":1,"message":"198","line":11,"column":45,"nodeType":"199","messageId":"200","endLine":11,"endColumn":48},{"ruleId":"189","severity":1,"message":"225","line":12,"column":19,"nodeType":"191","messageId":"192","endLine":12,"endColumn":22},{"ruleId":"189","severity":1,"message":"224","line":1,"column":28,"nodeType":"191","messageId":"192","endLine":1,"endColumn":36},{"ruleId":"220","severity":1,"message":"221","line":27,"column":8,"nodeType":"222","endLine":27,"endColumn":10,"suggestions":"226"},{"ruleId":"203","replacedBy":"227"},{"ruleId":"205","replacedBy":"228"},{"ruleId":"203","replacedBy":"229"},{"ruleId":"205","replacedBy":"230"},{"ruleId":"189","severity":1,"message":"214","line":1,"column":10,"nodeType":"191","messageId":"192","endLine":1,"endColumn":17},{"ruleId":"197","severity":1,"message":"198","line":13,"column":49,"nodeType":"199","messageId":"200","endLine":13,"endColumn":52},{"ruleId":"197","severity":1,"message":"198","line":8,"column":41,"nodeType":"199","messageId":"200","endLine":8,"endColumn":44},{"ruleId":"189","severity":1,"message":"224","line":2,"column":17,"nodeType":"191","messageId":"192","endLine":2,"endColumn":25},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Card' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'setIsFetching' is assigned a value but never used.","'id' is assigned a value but never used.","no-native-reassign",["231"],"no-negated-in-lhs",["232"],"'message' is defined but never used.",["231"],["232"],["231"],["232"],["231"],["232"],"'Divider' is defined but never used.","'tempData' is assigned a value but never used.","'List' is defined but never used.","'header' is assigned a value but never used.",["231"],["232"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["233"],"'useState' is defined but never used.","'url' is assigned a value but never used.",["234"],["231"],["232"],["231"],["232"],"no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"235","fix":"237"},"Update the dependencies array to be: [history]",{"range":"238","text":"239"},{"range":"240","text":"239"},[746,748],"[history]",[891,893]]